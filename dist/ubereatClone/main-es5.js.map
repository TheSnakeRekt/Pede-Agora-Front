{"version":3,"sources":["webpack:///src/app/account/addresses/new-address/new-address.component.ts","webpack:///src/app/account/addresses/new-address/new-address.component.html","webpack:///src/app/reducers/cart.reducer.ts","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/signup/signup.component.ts","webpack:///src/app/shared/signup/signup.component.html","webpack:///src/app/shared/sheduled-deliver-model/sheduled-deliver-model.component.ts","webpack:///src/app/shared/sheduled-deliver-model/sheduled-deliver-model.component.html","webpack:///src/app/single-restaurant/add-item-model/add-item-model.component.ts","webpack:///src/app/single-restaurant/add-item-model/add-item-model.component.html","webpack:///src/app/home/home.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/services/delay-interceptor.service.ts","webpack:///src/app/services/login.service.ts","webpack:///src/app/account/payments/payments.component.ts","webpack:///src/app/account/payments/payments.component.html","webpack:///src/app/single-restaurant/single-restaurant.component.html","webpack:///src/app/single-restaurant/single-restaurant.component.ts","webpack:///src/app/account/orders/orders.component.html","webpack:///src/app/account/orders/orders.component.ts","webpack:///src/app/actions/account.action.ts","webpack:///src/app/checkout/checkout.component.html","webpack:///src/app/checkout/checkout.component.ts","webpack:///src/app/services/orders.service.ts","webpack:///src/app/account/favourites/favourites.component.html","webpack:///src/app/account/favourites/favourites.component.ts","webpack:///src/app/services/write.service.ts","webpack:///src/app/services/read.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/services/restaurant.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/login/login.component.ts","webpack:///src/app/shared/login/login.component.html","webpack:///src/app/single-restaurant/meal/meal.component.ts","webpack:///src/app/single-restaurant/meal/meal.component.html","webpack:///src/app/services/cart.service.ts","webpack:///src/app/account/my-account/my-account.component.ts","webpack:///src/app/account/my-account/my-account.component.html","webpack:///src/app/shared/footer/footer.component.ts","webpack:///src/app/shared/footer/footer.component.html","webpack:///src/app/reducers/account.reducer.ts","webpack:///src/app/actions/cart.actions.ts","webpack:///src/app/reducers/selectedRestaurant.reducer.ts","webpack:///src/app/account/addresses/addresses.component.ts","webpack:///src/app/account/addresses/addresses.component.html","webpack:///src/app/account/change-info-component/change-info-component.component.ts","webpack:///src/app/account/change-info-component/change-info-component.component.html","webpack:///src/app/actions/restaurant.action.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["NewAddressComponent","initialState","tracker","orders","Array","reducerCart","state","action","type","payload","cart","order","replaceItem","newItem","arr","splice","findIndex","item","id","quantidade","push","HeaderComponent","dialog","router","activatedRoute","restaurantService","loginService","writeService","readService","quantityList","deliveryTimeSelection","deliveryAddresses","cartItems","inputAddressBoxEnable","searchInputBoxEnable","events","subscribe","event","currentRoute","url","loadToken","selectedDeliveryTime","selectedAddress","getCart","data","listOfAddresses","forEach","element","searchableFoods","getTags","slice","title","openDialog","dialogRef","open","width","deliveryDate","deliveryTime","afterClosed","result","console","log","total","preco","extras","length","extra","user","navigate","Object","assign","value","updateItem","trigger","toArray","togglePopover","getAccount","token","extractToken","validateToken","error","account","loggedIn","firstName","nome","split","trim","SignupComponent","signInFormGroup","required","apelido","nif","telefone","minLength","email","password","morada","codigopostal","cidade","valid","signIn","addAccount","signUp","SheduledDeliverModelComponent","dates","times","close","onNoClick","AddItemModelComponent","cartService","itemCount","isDisabled","radioOption","extraPrice","options","optionPrice","totalPrice","totalSelected","produto","grupos","tamanhos","radio","subOptions","source","name","tamanho","check","checked","filter","val","addToCart","remove","add","HomeComponent","restaurantes","loaderRestaurant","tags","getRestaurants","res","reverse","Set","concat","map","rest","tag","setTags","selectRestaurant","find","restaurant","restaurante","i","environment","production","DelayInterceptor","request","next","handle","pipe","LoginService","HttpClient","localStorage","getItem","post","headers","userInfo","PaymentsComponent","SingleRestaurantComponent","loader","params","restId","getSelectedRestaurant","keys","getRestaurant","rua","background","cdn","desktop_widget","getMeals","categorias","setItem","JSON","stringify","foto","produtos","relativeTo","OrdersComponent","orderService","getAllOrders","ADD_ACCOUNT","STORAGE_KEYS","AddAccount","CheckoutComponent","conta","access","OrdersService","httpClient","api","get","FavouritesComponent","restaurants","WriteService","store","dispatch","ReadService","select","AppComponent","RestaurantService","skltnConfig","rectRadius","flareWidth","bgFill","flareFill","AppModule","provide","useClass","multi","forRoot","selectedRestaurant","duration","LoginComponent","accountState","loginFormgroup","username","controls","logIn","fire","login","MealComponent","navSubscription","getCurrentNavigation","undefined","catfoto","parse","unsubscribe","meal","CartService","addItem","MyAccountComponent","matDialog","AccountToken","then","window","location","reload","editPassword","logout","changeChildRoute","FooterComponent","reducerAccount","REMOVE_CART","SAVE_CART","ADD_ORDER","UPDATE_ORDER","SaveCart","AddOrder","DeleteCart","UpdateOrder","reducerSelectedRestaurant","AddressesComponent","fullComponent","ChangeInfoComponentComponent","SELECT_RESTAURANT","SelectRestaurant","routes","path","component","children","redirectTo","pathMatch","AppRoutingModule","anchorScrolling","useHash","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-address',\n  templateUrl: './new-address.component.html',\n  styleUrls: ['./new-address.component.scss']\n})\nexport class NewAddressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>new-address works!</p>\n","import * as  CartActions  from '../actions/cart.actions';\r\nimport { Cart } from '../definitions/Cart';\r\n\r\nconst initialState: Cart = {\r\n    tracker : '',\r\n    orders : new Array(),\r\n}\r\n\r\nexport function reducerCart(state: Cart = initialState, action: CartActions.Actions) {\r\n    switch(action.type){\r\n        case CartActions.SAVE_CART:\r\n            return action.payload;\r\n        case CartActions.ADD_ORDER:\r\n            return {\r\n                tracker: action.cart.tracker,\r\n                orders: [...state.orders, action.order]\r\n            }\r\n        case CartActions.UPDATE_ORDER:\r\n            return {\r\n                tracker: state.tracker,\r\n                orders: [...replaceItem(state.orders,action.newItem)]\r\n            }      \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst replaceItem = (orders:Array<any>, newItem) =>{\r\n    const arr = [...orders];\r\n    arr.splice(orders.findIndex(item=>item.id == newItem.id), 1);\r\n    \r\n    if(newItem.quantidade < 1){\r\n        return [...arr];\r\n    }\r\n\r\n    arr.push(newItem);\r\n    return [...arr];\r\n}","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { MatDialog, MatSelectChange } from '@angular/material';\nimport { SheduledDeliverModelComponent } from '../sheduled-deliver-model/sheduled-deliver-model.component';\nimport { element } from 'protractor';\nimport { Router, ActivatedRoute, UrlSegment, NavigationEnd } from '@angular/router';\nimport { MdePopoverTrigger } from '@material-extended/mde';\nimport { User } from '../../interfaces/Ilogin';\nimport { RestaurantService } from '../../services/restaurant.service';\nimport { LoginService } from '../../services/login.service';\nimport { Console } from 'node:console';\nimport { WriteService } from '../../services/write.service';\nimport { ReadService } from '../../services/read.service';\nimport { Account } from '../../definitions/Account';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @ViewChildren(MdePopoverTrigger) trigger: QueryList<MdePopoverTrigger>;\n  user: Account;\n  quantityList = [1,2,3,4,5,6,7,8,9,10];\n  deliveryTimeSelection = [\n    {\n      'icon': 'access_time',\n      'title': 'Entregar Já'\n    },\n    {\n      'icon': 'calendar_today',\n      'title': 'Planear pra mais tarde'\n    }\n  ];\n\n  deliveryAddresses = new Array();\n  searchableFoods;\n\n  cartItems = new Array();\n  selectedDeliveryTime: any;\n  selectedAddress: any;\n  selectedSearchFood: any;\n\n  firstName: string;\n  deliveryDate: string;\n  deliveryTime: string;\n  currentRoute: string;\n  loggedIn: boolean;\n\n  constructor(\n    public dialog: MatDialog,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private restaurantService: RestaurantService,\n    private loginService: LoginService,\n    private writeService: WriteService,\n    private readService: ReadService,\n  ) { \n    this.router.events.subscribe(\n      (event: any) => {\n        if (event instanceof NavigationEnd) {\n          this.currentRoute = this.router.url;\n        }\n      }\n    );\n  }\n\n  ngOnInit() {  \n    this.loadToken();\n    this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n    this.selectedAddress = this.deliveryAddresses[0];\n    this.readService.getCart().subscribe(data=>{\n      this.cartItems = data.orders;\n    })\n  }\n\n  selectDefaultAddress(listOfAddresses) {\n    listOfAddresses.forEach(element => {\n      if (element.default) {\n        this.selectedAddress = element;\n      }\n    });\n  }\n\n  inputAddressBoxEnable = false;\n  addressButtonToggle() {\n    this.inputAddressBoxEnable = !this.inputAddressBoxEnable;\n  }\n  \n  searchInputBoxEnable = false;\n  searchButtonToggle() {\n    this.searchableFoods = this.restaurantService.getTags().slice(0,5);\n    this.searchInputBoxEnable = !this.searchInputBoxEnable;\n  }\n\n  deliveryTimeSelectionChange(event) {\n    if (this.selectedDeliveryTime.title == \"Scheduler For Later\") {\n      this.openDialog();\n    }\n  }\n\n  enableClosePopover;\n  openDialog(): void {\n    const dialogRef = this.dialog.open(SheduledDeliverModelComponent, {\n      width: '450px',\n      data: { deliveryDate: this.deliveryDate, deliveryTime: this.deliveryTime }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.deliveryDate = result.deliveryDate;\n        this.deliveryTime = result.deliveryTime;\n        this.selectedDeliveryTime.data = result.deliveryDate + ' ' + result.deliveryTime;\n      } else {\n        this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n      }\n    });\n  }\n\n  deliveryAddressChange(event) {\n    console.log(event);\n  }\n\n  calcularItem(item):number{\n    let total = (item.preco + item.extras[1]) * item.quantidade;\n\n    if(item.extras[3].length > 0){\n      item.extras[3].forEach(extra=>{\n        total += extra.preco;\n      });\n    }\n\n    return total;\n  }\n\n  calculateTotalPriceOfCart () : number{\n    let total = 0;\n    \n    this.cartItems.forEach(element => {\n      total += (element.preco + element.extras[1] * element.quantidade);\n      if(element.extras[3].length > 0){\n        element.extras[3].forEach(extra=>{\n          total += extra.preco;\n        });\n      }\n    });\n    \n    return total;\n  }\n\n  logout() {\n    this.user = null;\n    this.router.navigate(['home']);\n  }\n\n  addToCart(event: MatSelectChange, item): void {\n    let newItem = Object.assign({}, item);\n    newItem.quantidade = event.value;\n    this.writeService.updateItem(newItem);\n  }\n\n  removeFromCart(item){\n    let newItem = Object.assign({},item);\n    newItem.quantidade = 0;\n    this.writeService.updateItem(newItem);\n  }\n\n  closeCartPopover() {\n    this.trigger.toArray()[0].togglePopover();\n  }\n\n  private loadToken(){\n    this.readService.getAccount().subscribe(data=>{\n      if(data){\n        let token: string = this.readService.extractToken(data);\n        if(token){\n          this.loginService.validateToken(token).subscribe(data=>{\n            if(!data  || data.error){\n              this.router.navigate(['/login']);\n            }\n            data.account.token = token;\n            this.user = data.account;\n            this.loggedIn = true;\n            this.firstName = this.user.nome.split(' ')[0].trim();\n          });\n        }\n      }\n    });\n  }\n  \n}\n\n\nexport interface ScheduleTime {\n  deliveryDate: string;\n  deliveryTime: string;\n}","<div class=\"header-container\" *ngIf=\"currentRoute !== '/login' &&  currentRoute !== '/signup'\">\n    <div class=\"contain flex-with-space-between white-background\">\n        <div class=\"left-container flex-item-center flex1 full-height\">\n            <a class=\"logo\" routerLink=\"restaurant\">\n                <img src=\"../assets/logo.png\">\n            </a>\n            <div class=\"large-gap\"></div>\n            <ng-container *ngIf=\"selectedAddress\">\n                <button class=\"hide-mobile-view\" mat-button (click)=\"addressButtonToggle()\" *ngIf=\"!inputAddressBoxEnable\">\n                    <div class=\"header-menu-box\" style=\"max-width: 460px;\">\n                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">{{selectedAddress.icon}}</mat-icon>\n                        <div class=\"very-small-gap\"></div>\n                        <span class=\"header-menu-text\" style=\"max-width: 420px;\">{{selectedAddress.address}}</span>\n                    </div>\n                </button>\n                <mat-form-field class=\"hide-mobile-view\" *ngIf=\"inputAddressBoxEnable\" (keyup.enter)=\"addressButtonToggle()\"\n                    style=\"min-width: 380px; margin-top: 10px; \">\n                    <input matInput type=\"text\" [(ngModel)]=\"selectedAddress.address\" (blur)=\"addressButtonToggle()\"\n                        [matAutocomplete]=\"auto\" style=\" padding-bottom: 5px; font-size: 14px;\">\n                    <mat-icon fontSet=\"material-icons-outlined\" matPrefix mat-icon-button class=\"icon\"\n                        style=\"margin-right: 5px;\">{{selectedAddress.icon}}</mat-icon>\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\"\n                        (selectionChange)=\"deliveryAddressChange($event)\">\n                        <mat-option *ngFor=\"let deliveryAddress of deliveryAddresses\" [value]=\"deliveryAddress.address\"\n                            style=\"height: 80px;\">\n                            <div style=\"display: -webkit-box;\">\n                                <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\"\n                                    style=\"margin-right: 5px;\">{{deliveryAddress.icon}}</mat-icon>\n                                <div class=\"flex-column\">\n                                    <span>{{deliveryAddress.title}}</span>\n                                    <label>{{deliveryAddress.address}}</label>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </ng-container>\n\n            <div class=\"small-gap\"></div>\n            <mat-form-field class=\"hide-mobile-view\" appearance=\"none\" style=\"min-width: 190px; margin-top: 10px;\">\n                <mat-select [(ngModel)]=\"selectedDeliveryTime\" (selectionChange)=\"deliveryTimeSelectionChange($event)\">\n                    <mat-select-trigger>\n                        <div class=\"header-menu-box\" style=\"white-space: initial;\">\n                            <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">{{selectedDeliveryTime.icon}}\n                            </mat-icon>\n                            <div class=\"very-small-gap\"></div>\n                            <span class=\"header-menu-text\" *ngIf=\"selectedDeliveryTime.data\">\n                                {{selectedDeliveryTime.data}}\n                            </span>\n                            <span class=\"header-menu-text\" *ngIf=\"!selectedDeliveryTime.data\">\n                                {{selectedDeliveryTime.title}}\n                            </span>\n\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let time of deliveryTimeSelection\" [value]=\"time\">\n                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">{{time.icon}}</mat-icon>{{time.title}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"reverse-flex flex1 full-height\">\n            <a mat-button [mdePopoverTriggerFor]=\"cartPopover\" [mdePopoverOffsetX]=\"0\" [mdePopoverOffsetY]=\"55\"\n                mdePopoverTriggerOn=\"click\" *ngIf=\"cartItems && cartItems.length > 0\">\n                <div class=\"header-menu-box\">\n                    <mat-icon fontSet=\"material-icons-outlined\">shopping_cart</mat-icon>\n                    <div class=\"micro-gap\"></div>\n                    <span class=\"header-menu-text\">{{cartItems.length}}</span>\n                </div>\n            </a>\n            <div class=\"very-small-gap\"></div>\n            <a mat-button *ngIf=\"loggedIn; else conta\" [routerLink]=\"['/my-account']\" routerLinkActive=\"active\">\n                <div class=\"header-menu-box\">\n                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">person</mat-icon>\n                    <div class=\"very-small-gap\"></div>\n                    <span class=\"header-menu-text\">{{firstName}}</span>\n                </div>\n            </a>\n            <ng-template #conta>\n                <a mat-button [routerLink]=\"['/login']\" routerLinkActive=\"active\">\n                    <div class=\"header-menu-box\">\n                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">person</mat-icon>\n                        <div class=\"very-small-gap\"></div>\n                        <span class=\"header-menu-text\">Login</span>\n                    </div>\n                </a>\n            </ng-template>\n            <button mat-button (click)=\"searchButtonToggle()\" *ngIf=\"!searchInputBoxEnable\" class=\"hide-mobile-view\">\n                <div class=\"header-menu-box\">\n                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">search</mat-icon>\n                    <div class=\"very-small-gap\"></div>\n                    <span class=\"header-menu-text\">Pesquisar</span>\n                </div>\n            </button>\n            <mat-form-field style=\"margin-top: 10px;\" *ngIf=\"searchInputBoxEnable\" (keyup.enter)=\"searchButtonToggle()\" \n                floatLabel=\"never\">\n                <input matInput type=\"text\" placeholder=\"O que lhe apetece\" (blur)=\"searchButtonToggle()\"\n                    [matAutocomplete]=\"auto\" style=\" padding-bottom: 5px; font-size: 14px;\">\n                <mat-icon fontSet=\"material-icons-outlined\" matPrefix mat-icon-button class=\"icon\"\n                    style=\"margin-right: 5px;\">access_time</mat-icon>\n                <button mat-button matSuffix mat-icon-button aria-label=\"Clear\">\n                    <mat-icon style=\"padding-bottom: 5px;\">close</mat-icon>\n                </button>\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n                    <mat-option *ngFor=\"let food of searchableFoods\" [value]=\"food\">\n                        <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\"\n                            style=\"margin-right: 5px;\">access_time</mat-icon>\n                        <span>{{food}}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </div>\n    </div>\n</div>\n<mde-popover #cartPopover=\"mdePopover\" [mdePopoverCloseOnClick]=\"enableClosePopover\">\n    <div class=\"popover cart-card flex-column\" *ngIf=\"cartItems && cartItems.length > 0\">\n        <div class=\"cart-card-header flex-with-space-between padding-horizontaly\">\n            <div class=\"flex-item-center\">\n                <mat-icon fontSet=\"material-icons-outlined\">shopping_cart</mat-icon>\n                <div class=\"very-small-gap\"></div>\n                <h2>O Seu pedido ({{cartItems.length}})</h2>\n            </div>\n            <mat-icon fontSet=\"material-icons-outlined\" (click)=\"closeCartPopover()\">close</mat-icon>\n        </div>\n        <div class=\"cart-card-body\">\n            <ul>\n                <li class=\"flex-with-space-between padding\" *ngFor=\"let item of cartItems\">\n                    <div class=\"flex-item-center\">\n                        <mat-form-field style=\"width: 30px; background: transparent\" color=\"dark\">\n                            <mat-select style=\"text-align: center !important;\" [ngModel]=\"item.quantidade\"\n                                (selectionChange)=\"addToCart($event, item)\">\n                                <mat-option *ngFor=\"let quantityValue of quantityList\" [value]=\"quantityValue\"\n                                    style=\"margin-left: 5px !important;\">\n                                    {{quantityValue}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <div class=\"small-gap\"></div>\n                        <div class=\"flex-column\">\n                            <span>{{item.nome}}</span>\n                            <div class=\"flex-column label-small\" *ngIf=\"item.extras[0]\">\n                                <mat-label>{{item.extras[0]}}<mat-label *ngIf=\"item.extras[3].length > 0\"> + {{item.extras[3].length}} complemento(s)</mat-label></mat-label>\n                            </div>\n                            <a style=\"margin-top: 5px;\" class=\"accent\" (click)=\"removeFromCart(item)\">Retirar </a>\n                        </div>\n                       \n                    </div>\n                    <span>{{calcularItem(item).toFixed(2)}} €</span>\n                </li>\n            </ul>\n        </div>\n        <div class=\"cart-card-footer padding\">\n            <button mat-raised-button [routerLink]=\"['/checkout']\" (click)=\"closeCartPopover()\"  class=\"full-width full-height success-background \">\n                <div class=\"flex-with-space-between\">\n                    <span>\n                        Finalizar pedido\n                    </span>\n                    <span>\n                        {{calculateTotalPriceOfCart().toFixed(2)}} €\n                    </span>\n                </div>\n            </button>\n        </div>\n    </div>\n</mde-popover>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../services/login.service';\nimport { WriteService } from '../../services/write.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signInFormGroup: FormGroup;\n\n  constructor(private loginService: LoginService, private router: Router, private writeService: WriteService) {}\n\n  ngOnInit() {\n    this.signInFormGroup= new FormGroup({\n      nome: new FormControl('', Validators.required),\n      apelido: new FormControl(''),\n      nif: new FormControl(''),\n      telefone: new FormControl('', Validators.minLength(9)),\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required),\n      morada :new FormControl('',Validators.required),\n      codigopostal: new FormControl('', Validators.required),\n      cidade: new FormControl('', Validators.required)\n    });\n  }\n\n  signUp() {\n    if(this.signInFormGroup.valid) {\n      this.loginService.signIn(this.signInFormGroup.value).subscribe(data=>{\n        \n        if(data){\n          this.writeService.addAccount(data);\n          this.router.navigate(['/home'])\n        }\n      });\n    }\n  }\n  \n\n\n}\n\n\n","<div class=\"signup-container\">\n    <div class=\"signup-logo\">\n        <img src=\"../assets/logo_orig.png\" class=\"fadeIn\">\n    </div>\n    <div class=\"signup-form\">\n        <form [formGroup]=\"signInFormGroup\" (ngSubmit)=\"signUp()\">\n            <div class=\"signup-data-column\">\n                <div style=\"margin-bottom: 10px;\">Criar uma conta com numero de telefone e E-mail</div>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Nome</mat-label>\n                    <input matInput placeholder=\"Nome\" class=\"input-text full-width\" type=\"text\" formControlName=\"nome\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Apelido</mat-label>\n                    <input matInput placeholder=\"Apelido\" class=\"input-text full-width\" type=\"text\" formControlName=\"apelido\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>NIF</mat-label>\n                    <input matInput placeholder=\"NIF\" class=\"input-text full-width\" type=\"text\" formControlName=\"nif\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box half-width\" >\n                    <mat-label>Numero de telefone</mat-label>\n                    <input matInput placeholder=\"Numero de telefone\" class=\"input-text\" formControlName=\"telefone\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box half-width\">\n                    <mat-label>Endereço E-mail</mat-label>\n                    <input matInput placeholder=\"Endereço E-mail\" class=\"input-text\" formControlName=\"email\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Password</mat-label>\n                    <input matInput placeholder=\"Password\" class=\"input-text full-width\" type=\"password\" formControlName=\"password\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Repita a password</mat-label>\n                    <input matInput placeholder=\"Repita a password\" class=\"input-text\" type=\"password\">\n                </mat-form-field>\n            </div>\n            <div class=\"signup-data-column\">\n                <mat-form-field appearance=\"outline\" class=\"input-box half-width\" >\n                    <mat-label>Morada</mat-label>\n                    <input matInput placeholder=\"Morada\" class=\"input-text\" type=\"text\" formControlName=\"morada\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box fourth-width\" >\n                    <mat-label>Código Postal</mat-label>\n                    <input matInput placeholder=\"Código Postal\" class=\"input-text\" type=\"text\" formControlName=\"codigopostal\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box fourth-width\" >\n                    <mat-label>Cidade/Vila</mat-label>\n                    <input matInput placeholder=\"Cidade/Vila\" class=\"input-text\" type=\"text\" formControlName=\"cidade\">\n                </mat-form-field>\n            </div>\n            <div>\n                <button mat-raised-button type=\"submit\" class=\"full-width full-height accent-background\" style=\"height: 45px;\">\n                    Criar Conta\n                </button>\n                <div style=\"text-align: center; margin-top: 15px;\">\n                    <span>Já tem uma conta?</span> \n                    <span>\n                        <a [routerLink]=\"['/login']\" routerLinkActive=\"active\"> login</a>\n                    </span>\n                </div>\n            </div>\n        </form>\n    </div>\n  \n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { ScheduleTime } from '../header/header.component';\n\n@Component({\n  selector: 'app-sheduled-deliver-model',\n  templateUrl: './sheduled-deliver-model.component.html',\n  styleUrls: ['./sheduled-deliver-model.component.scss']\n})\nexport class SheduledDeliverModelComponent implements OnInit {\n  dates = [\n    \"Today, Mon, 21 Oct\",\n    \"Tomorrow, Tue, 22 Oct\",\n    \"Wed, 23 Oct\",\n    \"Thu, 24 Oct\",\n    \"Fri, 25 Oct\",\n    \"Sat, 26 Oct\",\n    \"Sun, 27 Oct\"\n  ];\n  times = [\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n\n  ];\n  constructor(\n    public dialogRef: MatDialogRef<SheduledDeliverModelComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ScheduleTime\n    ) {\n     \n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    if (!this.data.deliveryDate) {\n      this.data.deliveryDate = this.dates[0];\n      this.data.deliveryTime = this.times[0];\n    }\n  }\n\n}\n","<div class=\"scheduled-model-container\">\n  <div class=\"model-header\">\n    <h2>Schedule delivery time</h2>\n    <button mat-mini-fab color=\"default\">\n      <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\" (click)=\"onNoClick()\">close</mat-icon>\n    </button>\n  </div>\n  <div class=\"model-body\">\n    <div class=\"dropdown\">\n      <h4>Date</h4>\n      <mat-form-field floatLabel=\"never\" class=\"full-width\">\n        <mat-select [(ngModel)]=\"data.deliveryDate\">\n          <mat-option *ngFor=\"let date of dates\" [value]=\"date\">\n            {{date}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"dropdown\">\n      <h4>Time</h4>\n      <mat-form-field floatLabel=\"never\" class=\"full-width\">\n        <mat-select [(ngModel)]=\"data.deliveryTime\">\n          <mat-option *ngFor=\"let time of times\" [value]=\"time\">\n            {{time}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"model-footer\">\n    <button mat-raised-button class=\"full-width full-height success-background\" [mat-dialog-close]=\"data\"\n      cdkFocusInitial>\n      Set delivery time\n    </button>\n  </div>\n</div>","import { Component, OnInit, Inject, Output, EventEmitter, Input } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatCheckboxChange, MatDialogRef, MatRadioChange, MAT_DIALOG_DATA } from '@angular/material';\nimport { CartService } from '../../services/cart.service';\n\n@Component({\n  selector: 'app-add-item-model',\n  templateUrl: './add-item-model.component.html',\n  styleUrls: ['./add-item-model.component.scss']\n})\nexport class AddItemModelComponent implements OnInit {\n\n  subOptions;\n  itemCount = 1;\n  produto;\n  grupos;\n\n  @Input()\n  isDisabled: boolean = false;\n\n  extra:any = {\n    preco:0,\n  };\n\n  radioOption = new Array();\n  extraPrice:number = 0;\n  options = new Array();\n  optionPrice: number = 0;\n\n  price:number;\n\n  @Input()\n  totalPrice:number = 0;\n\n  @Output()\n  changeRadio: EventEmitter<MatRadioChange>\n\n  totalSelected: number = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddItemModelComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private cartService: CartService\n  ) {\n    this.produto = Object.assign({}, data[0]); \n    this.grupos = [...data[1]]; \n\n    if (this.produto.quantidade > 0) {\n      this.itemCount = this.produto.quantidade;\n    }\n\n    if(this.produto.tamanhos.length > 0){\n      this.isDisabled = true;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  add() {\n    this.itemCount += 1;\n  }\n\n  remove() {\n    this.itemCount -= 1;\n  }\n\n\n  onChange(radio: MatRadioChange){\n    if(radio.value.grupos?.length > 0){\n      this.subOptions = true;\n    }\n\n    this.totalSelected++;\n\n    if(this.subOptions){\n      this.isDisabled = true;\n    }else{\n      this.isDisabled = false;\n    }\n\n    this.extra = radio.value;\n  }\n\n  onChangeExtra(radio: MatRadioChange){\n    this.radioOption[radio.source.name] = radio.value;\n\n    this.extraPrice = 0;\n\n    this.radioOption.forEach(data=>{\n      this.extraPrice += data;\n    });\n    this.totalSelected++;\n\n    if(this.subOptions && this.totalSelected > 2){\n      this.isDisabled = false;\n    }\n  }\n\n  parseTamanho(tamanho){\n    return {\n      nome: tamanho.nome,\n      preco: tamanho.preco,\n      grupos: tamanho.grupos,\n    }\n  }\n\n  onChangeCheckBox(check: MatCheckboxChange){\n    let value:any = check.source.value;\n    \n    if(check.checked){\n      this.options.push(value)\n    }else{\n      this.options = this.options.filter(val => val.id != value.id);\n    }\n    this.optionPrice = 0;\n    this.options.forEach(data=>{\n      this.optionPrice += data.preco;\n    })\n  }\n\n  ngOnInit() {\n    // if (!this.data.deliveryDate) {\n    //   this.data.deliveryDate = this.dates[0];\n    //   this.data.deliveryTime = this.times[0];\n    // }\n  }\n\n  addToCart() {\n    this.totalSelected = 0\n    this.produto.quantidade = this.itemCount;\n    this.produto.extras = [this.extra.nome, this.extra.preco , this.radioOption, this.options];\n    this.cartService.addToCart(this.produto);\n  }\n\n}\n","<div class=\"add-item-model-container\">\n  <div class=\"model-header\">\n    <div class=\"flex-item-center\">\n      <img *ngIf=\"produto.type === 'veg'\"\n        src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/511904b5d7cd6881bc88882d4089e3bb.svg\" width=\"12px\" height=\"12px\">\n      <img *ngIf=\"produto.type === 'nonveg'\"\n        src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/d049360b6709dd54ea5ff0689849db7a.svg\" width=\"12px\" height=\"12px\">\n      <div class=\"very-small-gap\"></div>\n      <h1>{{produto.nome}}</h1>\n    </div>\n    <button mat-mini-fab color=\"default\" (click)=\"onNoClick()\">\n      <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\">close</mat-icon>\n    </button>\n  </div>\n  <div class=\"model-body\">\n    <div *ngIf=\"produto.tamanhos.length > 0; else grupos\">\n      <div class=\"instruction\">\n        <span style=\"padding: 0px 20px;\">*Tamanhos:</span>\n        <div>\n          <mat-radio-group (change)=\"onChange($event)\" name=\"tamanhos\" [required]=\"true\">\n              <mat-radio-button  *ngFor=\"let tamanho of produto.tamanhos\" [name]=\"tamanho.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"parseTamanho(tamanho)\">{{tamanho.nome}}<mat-label>(+{{tamanho.preco}}€)</mat-label></mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n      <div *ngIf=\"subOptions\">\n        <div class=\"options\" *ngFor=\"let extra of extra.grupos\">\n          <ng-container *ngIf=\"extra.force_min > 0; else checkExtra\">\n            <span style=\"padding: 15px 20px;\">*{{extra.nome}}</span>\n            <div>\n              <mat-radio-group (change)=\"onChangeExtra($event)\" [name]=\"extra.nome\">\n                  <mat-radio-button  *ngFor=\"let opcao of extra.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-radio-button>\n              </mat-radio-group>\n            </div>\n          </ng-container>\n          <ng-template #checkExtra>\n            <span style=\"padding: 15px 20px;\">{{extra.nome}}</span>\n            <div>\n              <mat-checkbox (change)=\"onChangeCheckBox($event)\" *ngFor=\"let opcao of extra.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-checkbox>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <ng-template *ngFor=\"let grupo of grupos\" #grupos>\n      <div *ngIf=\"grupo.required;\" class=\"instruction\">\n        <span style=\"padding: 0px 20px;\">*{{grupo.nome}}:</span>\n        <mat-radio-group (changeRadio)=\"onChange($event)\" [name]=\"grupo.nome\" [required]=\"true\">\n            <mat-radio-button  *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div *ngIf=\"!grupo.required;\" class=\"instruction\">\n        <span style=\"padding: 0px 20px;\">{{grupo.nome}}:</span>\n        <mat-checkbox (changeRadio)=\"onChange($event)\"  *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-checkbox>\n      </div>\n    </ng-template>\n    <div *ngIf=\"produto.grupos.length > 0\">\n      <ng-container *ngFor=\"let grupo of produto.grupos\">\n      <div class=\"instruction\">\n        <div *ngIf=\"grupo.force_min > 0 && grupo.nome != 'Extras'; else checkExtraProduto\">\n          <span style=\"padding: 0px 20px;\">*{{grupo.nome}}</span>\n          <div>\n            <mat-radio-group (change)=\"onChange($event)\" [name]=\"grupo.nome\">\n                <mat-radio-button  *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n        <ng-template #checkExtraProduto>\n          <span style=\"padding: 0px 20px;\">{{grupo.nome}}</span>\n          <div>\n            <mat-checkbox (change)=\"onChangeCheckBox($event)\" *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-checkbox>\n          </div>\n        </ng-template>\n      </div>\n    </ng-container>\n    </div>\n    <div class=\"instruction\">\n      <h3 style=\"padding: 0px 20px;\">Instruções extra</h3>\n    </div>\n    <div style=\"margin-top: 20px; padding: 0px 20px;\">\n      <mat-form-field class=\"full-width\">\n        <textarea matInput placeholder=\"Deixe informaçoes para o entregador/restaurante\"></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"model-footer flex-item-center\">\n    <div class=\"flex-item-center\">\n      <button mat-mini-fab style=\"margin-right: 10px;\" color=\"default\" [disabled]=\"itemCount < 2\" (click)=\"remove()\">\n        <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\">remove</mat-icon>\n      </button>\n      <span>{{itemCount}}</span>\n      <button mat-mini-fab style=\"margin-left: 10px;\" color=\"default\" (click)=\"add()\">\n        <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\">add</mat-icon>\n      </button>\n    </div>\n    <div class=\"small-gap\"></div>\n    <button mat-raised-button class=\"full-width full-height success-background\" (click)=\"addToCart()\"\n      [mat-dialog-close]=\"produto\" cdkFocusInitial id=\"addCartButton\" [disabled]=\"isDisabled\">\n      <div>\n        Adicionar {{itemCount}} ao pedido\n        <span style=\"float: right;\">{{(itemCount * produto.preco + itemCount * extra.preco + optionPrice + extraPrice).toFixed(2)}} €</span>\n      </div>\n    </button>\n  </div>\n</div>","<div class=\"home-container\">\n    <ng-container *ngIf=\"restaurantes.length < 1\">\n        <div class=\"card-container\">\n            <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n                flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loaderRestaurant\">\n                <!-- Card with Avatar -->\n                <div class=\"skltn-card\">\n                    <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                    <div class=\"skltn-card__body\">\n                        <div skltn-bone class=\"skltn-card__title\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                    </div>\n                </div>\n            </skltn-root>\n        </div>\n    </ng-container>\n    <ng-container *ngFor=\"let tag of tags\">\n        <div style=\"margin: 20px 0px 0px 10px;\">\n            <span style=\"font-size: 26px; font-weight: 600;\">{{tag}}</span>\n        </div>\n        <div class=\"card-container\">\n            <ng-container *ngFor=\"let restaurante of restaurantes\">\n                <div  class=\"card\" *ngIf=\"hasTag(restaurante, tag)\" (click)=\"goToRestaurant(restaurante.id)\">\n                    <div class=\"img-box\">\n                        <img src=\"../{{restaurante.logo}}\"  class=\"img-box\" data-selected=\"true\" data-label-id=\"0\">\n                    </div>\n                    <div class=\"details-box\">\n                        <div>\n                            <span style=\"font-weight: 600;\">{{restaurante.nome}}</span>\n                        </div>\n                        <div style=\"margin-top: 5px;\">\n                            <label>€</label>\n                            &bull;\n                            <label *ngFor=\"let type of restaurante.tags; let i = index\">{{type}}<span\n                                    style=\"margin: 0px 5px;\"\n                                    *ngIf=\"i < restaurante.tags.length - 1\">&bull;</span></label>\n                        </div>\n                        <div style=\"margin-top: 5px;\">\n                            <mat-chip-list>\n                                <mat-chip>{{restaurante.timing}}</mat-chip>\n                                <mat-chip>\n                                    {{restaurante.stars}} <img\n                                        src=\"\">\n                                    {{restaurante.totalReviews}}\n                                </mat-chip>\n                            </mat-chip-list>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { Router } from '@angular/router';\nimport { Restaurant } from '../definitions/Restaurant';\nimport { WriteService } from '../services/write.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  restaurantes:Restaurant[] = new Array();\n  loaderRestaurant = new Array(3);\n  tags = new Array();\n  constructor(private restaurantService: RestaurantService, private router: Router, private writeService: WriteService) { }\n \n\n  ngOnInit() {\n    this.restaurantService.getRestaurants().subscribe(res=>{\n      this.restaurantes = res.reverse();\n      this.tags = [...new Set([].concat(...this.restaurantes.map((rest)=>{\n        return rest.tags.map(tag=>{\n          return tag.trim()\n        })\n      })))];\n      this.restaurantService.setTags(this.tags);\n    });\n  }\n\n  goToRestaurant(id:number){\n    this.writeService.selectRestaurant(this.restaurantes.find(restaurant => restaurant.id === id));\n    this.router.navigate(['restaurants/',id]);\n  }\n\n  hasTag(restaurante: any, tag: string): boolean{\n    for(let i = 0; i < restaurante.tags.length; i++){\n      if(restaurante.tags[i].trim() == tag){\n        return true\n      }\n    }\n    return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// ANGULAR\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\n// OBSERVABLES\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/internal/operators';\n\n@Injectable()\nexport class DelayInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        console.log(request);\n        return next.handle(request).pipe(delay(500));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AccountToken } from '../definitions/Account';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private HttpClient:HttpClient) { }\n\n  logIn(user):Observable<AccountToken> {\n    let token = localStorage.getItem(\"TOKEN\");\n    console.log(user);\n    \n    return this.HttpClient.post<any>(`http://localhost:3000/login`, user, {headers:{'x-access-token': token ? token : ``}});\n  }\n\n  validateToken(token:string): Observable<AccountToken>{\n    return this.HttpClient.post<any>(`http://localhost:3000/login`, {}, {headers:{'x-access-token': token ? token : ``}});\n  }\n\n  signIn(userInfo): Observable<any>{\n    return this.HttpClient.post<any>(`http://localhost:3000/signin`, userInfo);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 style=\"margin-bottom: 20px;\">Métodos de Pagamento</h1>\n<img class=\"_2tuBw _12_oN\" width=\"140\" height=\"80\" alt=\"\"\n    src=\"https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_140,h_80/image-pay-by-cash_av6bcw\">\n<div style=\"margin-top: 30px;display: flex; flex-direction: column;\">\n    <h3>Pagar à entrega</h3>\n    <span style=\"margin-top: 10px; font-weight: 500; opacity: .5;\">Para já só é aceite o pagamento a quando a entrega.</span>\n  \n</div>","<div class=\"single-restaurant-container\">\n    <div class=\"restaurant-header-box\" [style]='background'>\n        <div class=\"details-box\">\n            <div class=\"contain\">\n                <h1 style=\"font-weight: 600;\">{{restaurant.nome}}</h1>\n                <div style=\"margin-top: 15px;\">\n                    <label>€</label>\n                    <div *ngFor='let tag of restaurant.tags'>\n                        <label><span style=\"margin: 0px 5px;\">&bull;</span>{{tag.trim()}}</label>\n                    </div>\n                </div>\n                <div class=\"restaurant-info\">\n                    <mat-chip-list>\n                        <mat-chip>{{restaurant.timing}}</mat-chip>\n                        <mat-chip>\n                            {{restaurant.rating}}\n                            <img src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/972e1cb487b3a5c72c30a6635596f477.svg\">\n                            {{restaurant.totalReviews}}\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n                <div style=\"margin-top: 15px;\">\n                    <label>{{morada}}</label>\n                </div>\n            </div>\n        </div>\n        <div class=\"img-box\">\n            <img src=\"../{{restaurant.logo}}\" width=\"100%\" height=\"380px\" />\n        </div>\n    </div>\n    <div class=\"menu-header\">\n        <nav mat-tab-nav-bar mat-align-tabs=\"center\" class=\"tab-group\">\n            <a mat-tab-link\n               *ngFor=\"let item of categorias\"\n               [routerLink]=\"item.nome\"\n               [state]=\"[item.produtos, item.foto, item.grupos]\"\n               routerLinkActive #rla=\"routerLinkActive\"\n               [active]=\"rla.isActive\"\n               >\n              {{item.nome}}\n            </a>\n        </nav>\n    </div>\n    <div class=\"menu-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Restaurant } from '../definitions/Restaurant';\nimport { ReadService } from '../services/read.service';\n\n@Component({\n  selector: 'app-single-restaurant',\n  templateUrl: './single-restaurant.component.html',\n  styleUrls: ['./single-restaurant.component.scss']\n})\nexport class SingleRestaurantComponent implements OnInit {\n\n  categorias: any;\n  cart = Array();\n  loader = Array(8);\n  restaurant:Restaurant;\n  background:string;\n  morada:string;\n  restId:number;\n\n  constructor(\n    public dialog: MatDialog,\n    private restaurantService: RestaurantService,\n    private readService: ReadService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {\n    this.activatedRoute.params.subscribe(val=>{\n      this.restId = val.id;\n    });\n  }\n\n  ngOnInit() {\n    this.readService.getSelectedRestaurant().subscribe(data=>{\n      this.restaurant = data;\n\n      if(Object.keys(data).length === 0){\n        this.restaurantService.getRestaurant(this.restId).subscribe(restaurant=>{\n          this.restaurant = restaurant;\n          this.morada =`${this.restaurant.morada.rua}`; \n          this.background = `background:url(${this.restaurant.cdn}${this.restaurant.desktop_widget});   \n          background-size: 100%;\n          background-repeat: no-repeat;`;\n        });\n      }else{\n        this.morada =`${this.restaurant.morada.rua}`; \n        this.background = `background:url(${this.restaurant.cdn}${this.restaurant.desktop_widget});   \n        background-size: 100%;\n        background-repeat: no-repeat;`;\n      }\n    });\n\n    this.restaurantService.getMeals(this.restId).subscribe(data=>{\n      this.categorias = data;\n      console.log(data);\n      if(this.categorias[0].grupos.length > 0){\n        localStorage.setItem(\"Grupos\", JSON.stringify(this.categorias[0].grupos));\n      }\n      \n      localStorage.setItem(\"foto\", this.categorias[0].foto);\n      localStorage.setItem(\"Categoria\", JSON.stringify(this.categorias[0].produtos));\n      this.router.navigate([this.categorias[0].nome], {relativeTo: this.activatedRoute});\n    });\n  }\n}","<h1>Pedidos Anteriores</h1>\n<ng-container *ngIf=\"orders.length < 1\">\n        <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n            flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loader\">\n            <!-- Card with Avatar -->\n            <div class=\"skltn-card\">\n                <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                <div class=\"skltn-card__body\">\n                    <div skltn-bone class=\"skltn-card__title\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                </div>\n            </div>\n        </skltn-root>\n</ng-container>\n<div class=\"order-box\" *ngFor=\"let order of orders\">\n    <div class=\"img-box\">\n        <img [src]=\"order.image\" width=\"250\" height=\"120\">\n    </div>\n    <div class=\"detail-box\">\n        <div style=\"margin-bottom: 5px;\"><span style=\"font-size: 18px; font-weight: 600;\">{{order.name}}</span></div>\n        <label>{{order.meals.length}} items for ₹ {{order.totalPrice}} • {{order.time}}</label>\n        <ul style=\"margin-top: 15px;\">\n            <li style=\"margin-bottom: 10px;\" class=\"flex-item-center\" *ngFor=\"let meal of order.meals\">\n                <div class=\"border-box\">{{meal.quantity}}</div>\n                <div class=\"very-small-gap\"></div>\n                <span>{{meal.name}}</span>\n            </li>\n\n        </ul>\n    </div>\n    <div style=\"flex: 1; margin-left: 40px;\">\n        <button mat-raised-button class=\"full-width full-height success-background \" style=\"height: 45px;\">\n            Reorder\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OrdersService } from 'src/app/services/orders.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n  loader = new Array(2);\n  orders = new Array();\n  constructor(private orderService: OrdersService) { }\n\n  ngOnInit() {\n    this.orderService.getAllOrders().subscribe(res=>{\n      this.orders = res;\n    });\n  }\n\n}\n","import { Action } from '@ngrx/store';\nimport { AccountToken } from '../definitions/Account';\n\nexport const ADD_ACCOUNT = `[ACCOUNT] Add`;\n\n\nexport const STORAGE_KEYS = {\n  account: `ACCOUNT`,\n  token: `TOKEN` \n}\nexport class AddAccount implements Action {\n\n  readonly type = ADD_ACCOUNT;\n\n  constructor(public payload: AccountToken){\n  }\n}\n\n\n\nexport type Actions = AddAccount ;","<div class=\"cart-container\">\n    <div class=\"cart-container-box\">\n        <div class=\"left-container-box\">\n            <div class=\"child-box\" *ngIf=\"conta == null\">\n                <div>\n                    <h2>Conta</h2>\n                    <span>Para efetuar o seu pedido, faça Login na sua conta ou registe-se já!</span>\n                </div>\n                <div class=\"button-container\">\n                    <div class=\"button-box\">\n                        <button mat-raised-button class=\"default-button success-background\" style=\"width: 150px;\"\n                        [routerLink]=\"['/login']\">\n                            LOG IN\n                        </button>\n                    </div>\n                    <div class=\"button-box\" style=\"margin-left: 20px;\">\n                        <button mat-raised-button class=\"default-button success-outline\" style=\"width: 150px;\"\n                        [routerLink]=\"['/signup']\" >\n                            Registrar\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"conta != null\" class=\"child-box\">\n                <div>\n                    <h2>Endereço de entrega</h2>\n                    <span *ngIf=\"conta.moradas?.length > 1\">\n                        Escolha onde quer ser entregue\n                    </span>\n                </div>\n                <div  class=\"address-box-container\">\n                    <app-addresses (conta)=\"conta\" (fullComponent)=\"false\"></app-addresses>\n                </div>\n            </div>\n            <div class=\"child-box\">\n                <div>\n                    <h2>Método de pagamento</h2>\n\n                </div>\n                <div class=\"second-view\">\n                    <div class=\"body\" style=\"padding: 0;\">\n                        <div class=\"list-view\">\n                            <div class=\"list-box\">\n                                <ul>\n                                    <li class=\"item\">\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            account_balance_wallet\n                                        </mat-icon>\n                                        <span class=\"text\" style=\"margin-left: 10px;\">Wallets</span>\n                                    </li>\n                                    <li class=\"item \">\n\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            credit_card\n                                        </mat-icon>\n                                        <span style=\"margin-left: 10px;\" class=\"text\">\n                                            Credit/Debit Cards\n                                        </span>\n                                    </li>\n                                    <li class=\"item active_item\">\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            money\n                                        </mat-icon>\n                                        <span class=\"text\" style=\"margin-left: 10px;\">Pagar á entrega</span>\n                                    </li>\n                                    <li class=\"item\">\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            credit_card\n                                        </mat-icon>\n                                        <span class=\"text\" style=\"margin-left: 10px;\">UPI</span>\n                                    </li>\n\n\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"result-view\">\n                            <div class=\"result-box\">\n                                <img class=\"_2tuBw _12_oN\" width=\"140\" height=\"80\" alt=\"\"\n                                    src=\"https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_140,h_80/image-pay-by-cash_av6bcw\">\n                                <div style=\"margin-top: 30px;display: flex; flex-direction: column;\">\n                                    <h3 style=\"font-weight: 400\">Pagar á entrega</h3>\n                                    <span style=\"margin-top: 10px; font-weight: 500; opacity: .5;\">Os nossos entregadores nao dispõem de troco, tente ter o valor exato</span>\n                                    <div class=\"button-box full-size-button-box\">\n                                        <button mat-raised-button class=\"default-button success-background\"\n                                            style=\"margin-top: 20px;\">\n                                            <span>€</span>\n                                        </button>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"right-container-box\">\n\n\n\n            <div class=\"main-box cart-card\" style=\"padding: 0;\">\n                <div class=\"cart-card-header flex-with-space-between padding-horizontaly\">\n                    <div class=\"flex-item-center\">\n                        <mat-icon fontSet=\"material-icons-outlined\">shopping_cart</mat-icon>\n                        <div class=\"very-small-gap\"></div>\n                        <h2>O Seu pedido ({{cart.orders.length}})</h2>\n                    </div>\n                </div>\n                <div class=\"cart-card-body\">\n                    <ul>\n                        <li class=\"flex-with-space-between padding\" *ngFor=\"let item of cart.orders\">\n                            <div class=\"flex-item-center\">\n                                <mat-form-field style=\"width: 30px; background: transparent\" color=\"dark\">\n                                    <mat-select style=\"text-align: center !important;\" [ngModel]=\"item.quantidade\"\n                                        (selectionChange)=\"addToCart($event, item)\">\n                                        <mat-option *ngFor=\"let quantityValue of quantityList\" [value]=\"quantityValue\"\n                                            style=\"margin-left: 5px !important;\">\n                                            {{quantityValue}}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <div class=\"small-gap\"></div>\n                                <div class=\"flex-column\">\n                                    <span>{{item.nome}}</span>\n                                    <div class=\"flex-column label-small\" *ngIf=\"item.extras[0]\">\n                                        <mat-label>{{item.extras[0]}}<mat-label *ngIf=\"item.extras[3].length > 0\"> + {{item.extras[3].length}} complemento(s)</mat-label></mat-label>\n                                    </div>\n                                    <a style=\"margin-top: 5px;\" class=\"accent\" (click)=\"removeFromCart(item)\">Retirar </a>\n                                </div>\n                               \n                            </div>\n                            <span>{{calcularItem(item).toFixed(2)}} €</span>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"cart-card-footer padding\">\n                    <button mat-raised-button\n                        class=\"full-width full-height success-background \">\n                        <div class=\"flex-with-space-between\">\n                            <span>\n                                Pagar\n                            </span>\n                            <span>\n                                {{calculateTotalPriceOfCart()}} €\n                            </span>\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService } from '../services/cart.service';\nimport { ReadService } from '../services/read.service';\nimport { Account } from '../definitions/Account';\nimport { Cart } from '../definitions/Cart';\nimport { WriteService } from '../services/write.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n  quantityList = [1,2,3,4,5,6,7,8,9,10];\n  conta: Account = null;\n  cart: Cart;\n  constructor(private router: Router, \n    private writeService: WriteService,\n    private readService: ReadService) {\n\n\n  }\n\n  ngOnInit() {\n    this.readService.getAccount().subscribe(data=>{\n      if(data.access){\n        this.conta = data.account;\n      }\n    });\n    this.readService.getCart().subscribe(data=>{\n      this.cart = data;\n    })\n  }\n\n  addToCart(event, item): void {\n    let newItem = Object.assign({}, item);\n    newItem.quantidade = event.value;\n    this.writeService.updateItem(newItem);\n  }\n\n  removeFromCart(item){\n    let newItem = Object.assign({},item);\n    newItem.quantidade = 0;\n    this.writeService.updateItem(newItem);\n  }\n\n  calculateTotalPriceOfCart () : number{\n    let total = 0;\n    \n    this.cart.orders.forEach(element => {\n      total += (element.preco + element.extras[1] * element.quantidade);\n      if(element.extras[3].length > 0){\n        element.extras[3].forEach(extra=>{\n          total += extra.preco;\n        });\n      }\n    });\n    \n    return total;\n  }\n\n  \n  calcularItem(item):number{\n    let total = (item.preco + item.extras[1]) * item.quantidade;\n\n    if(item.extras[3].length > 0){\n      item.extras[3].forEach(extra=>{\n        total += extra.preco;\n      });\n    }\n\n    return total;\n  }\n\n  openLoginSideNav(){\n   // this.helperService.loginSideNav.next(true);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  api = \"http://localhost:3000\";\n\n  constructor(private httpClient: HttpClient) { }\n  getAllOrders(): Observable<any>{\n   return this.httpClient.get(this.api+\"/orders\");\n  }\n}\n","<h1>Favoritos</h1>\n\n<ng-container *ngIf=\"restaurants.length < 1\">\n    <div class=\"card-container\">\n        <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n            flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loader\">\n            <!-- Card with Avatar -->\n            <div class=\"skltn-card\">\n                <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                <div class=\"skltn-card__body\">\n                    <div skltn-bone class=\"skltn-card__title\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                </div>\n            </div>\n        </skltn-root>\n    </div>\n</ng-container>\n<div class=\"card-container\" *ngIf=\"restaurants.length > 0\">\n    <div class=\"card\" *ngFor=\"let restaurant of restaurants[0].list\">\n        <div class=\"img-box\">\n            <img [src]=\"restaurant.image\" width=\"350px\" height=\"240px\" data-selected=\"true\" data-label-id=\"0\">\n        </div>\n        <div class=\"details-box\">\n            <div>\n                <span style=\"font-weight: 600;\">{{restaurant.name}} <span *ngIf=\"restaurant.area\">-\n                        {{restaurant.area}} </span></span>\n            </div>\n            <div style=\"margin-top: 5px;\">\n                <label>₹₹</label>\n                &bull;\n                <label *ngFor=\"let type of restaurant.foodType; let i = index\">{{type}}<span\n                        *ngIf=\"i < restaurant.foodType.length-1\" style=\"margin: 0px 5px;\">&bull;</span></label>\n            </div>\n            <div style=\"margin-top: 5px;\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                    <mat-chip>{{restaurant.timing}}</mat-chip>\n                    <mat-chip>\n                        {{restaurant.ratingPoints}} <img\n                            src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/972e1cb487b3a5c72c30a6635596f477.svg\">\n                        (500+)\n                    </mat-chip>\n                </mat-chip-list>\n            </div>\n\n        </div>\n    </div> \n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestaurantService } from 'src/app/services/restaurant.service';\n\n@Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.scss']\n})\nexport class FavouritesComponent implements OnInit {\n  loader = new Array(2);\n  restaurants = new Array();\n  loaderRestaurant = new Array(8);\n  constructor(private router: Router, private restaurantService: RestaurantService) {}\n  ngOnInit() {\n    this.restaurantService.getRestaurants().subscribe(res=>{\n      this.restaurants = res;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../app.state';\nimport * as AccountActions from '../actions/account.action';\nimport * as RestaurantActions from '../actions/restaurant.action';\nimport * as  CartActions  from '../actions/cart.actions';\nimport { AccountToken } from '../definitions/Account';\nimport { Restaurant } from '../definitions/Restaurant';\nimport { Cart } from '../definitions/Cart';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WriteService {\n\n  constructor(private store: Store<AppState>) { }\n\n  addAccount(account: AccountToken){\n    this.store.dispatch(new AccountActions.AddAccount(account));\n  }\n\n  selectRestaurant(restaurant: Restaurant){\n    this.store.dispatch(new RestaurantActions.SelectRestaurant(restaurant))\n  }\n\n  saveCart(cart: Cart){\n    this.store.dispatch( new CartActions.SaveCart(cart));\n  }\n\n  addItem(cart:Cart, item){\n    this.store.dispatch( new CartActions.AddOrder(cart, item));\n  }\n  \n  updateItem(newItem){\n    this.store.dispatch( new CartActions.UpdateOrder(newItem));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppState } from '../app.state';\nimport { Store } from '@ngrx/store';\nimport { AccountToken } from '../definitions/Account';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReadService {\n\n  constructor(private store: Store<AppState>) {}\n\n  getAccount(){\n    return this.store.select('account');\n  }\n\n  getSelectedRestaurant(){\n    return this.store.select('selectedRestaurant');\n  }\n\n  extractToken(data: AccountToken){\n    return data.account.token ? data.account.token : ``;\n  }\n\n  getCart(){\n    return this.store.select('cart');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Pede Agora';\n}\n","<app-header></app-header>\n<div class=\"main\">\n    <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  api = \"http://localhost:3000\";\n  tags: Array<string>;\n\n  constructor(private httpClient: HttpClient) { }\n  getRestaurants(): Observable<any>{\n   return this.httpClient.get(this.api+\"/restaurantes\");\n  }\n  \n  getRestaurant(id:number): Observable<any>{\n    return this.httpClient.get(this.api+\"/restaurantes/\"+id);\n  }\n\n  getMeals(id:number): Observable<any> {\n    return this.httpClient.get(this.api+\"/restaurantes/\"+id+\"/meals/\");\n  }\n\n  setTags(tags:Array<string>){\n    this.tags = tags;\n  }\n\n  getTags(): Array<string>{\n    return this.tags;\n  }\n\n  getRecommendsItems(): Observable<any> {\n    return this.httpClient.get(this.api+\"/meals\");\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatBadgeModule,\n} from '@angular/material';\nimport { NgxSkltnModule, SkltnConfig } from 'ngx-skltn';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MdePopoverModule } from '@material-extended/mde';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './shared/login/login.component';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { SingleRestaurantComponent } from './single-restaurant/single-restaurant.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SheduledDeliverModelComponent } from './shared/sheduled-deliver-model/sheduled-deliver-model.component';\nimport { FavouritesComponent } from './account/favourites/favourites.component';\nimport { OrdersComponent } from './account/orders/orders.component';\nimport { MyAccountComponent } from './account/my-account/my-account.component';\nimport { PaymentsComponent } from './account/payments/payments.component';\nimport { AddressesComponent } from './account/addresses/addresses.component';\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { AddItemModelComponent } from './single-restaurant/add-item-model/add-item-model.component';\nimport { DelayInterceptor } from './services/delay-interceptor.service';\nimport { StoreModule } from '@ngrx/store';\nimport { reducerAccount } from './reducers/account.reducer';\nimport { reducerSelectedRestaurant } from './reducers/selectedRestaurant.reducer';\nimport { MealComponent } from './single-restaurant/meal/meal.component';\nimport { reducerCart } from './reducers/cart.reducer';\nimport { ChangeInfoComponentComponent } from './account/change-info-component/change-info-component.component';\nimport { NewAddressComponent } from './account/addresses/new-address/new-address.component';\n\nconst skltnConfig: SkltnConfig = {\n  rectRadius: 10,\n  flareWidth: '150px',\n  bgFill: '#d8d5d1',\n  flareFill: 'rgba(255,255,255, 0.5)',  \n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    SingleRestaurantComponent,\n    CheckoutComponent,\n    SheduledDeliverModelComponent,\n    FavouritesComponent,\n    OrdersComponent,\n    MyAccountComponent,\n    PaymentsComponent,\n    AddressesComponent,\n    AddItemModelComponent,\n    MealComponent,\n    ChangeInfoComponentComponent,\n    NewAddressComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({\n      account: reducerAccount,\n      selectedRestaurant: reducerSelectedRestaurant,\n      cart: reducerCart\n    }),\n    //material\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatBadgeModule,\n    //-----end material\n    MdePopoverModule,\n    NgxSkltnModule.forRoot(skltnConfig),\n    ReactiveFormsModule,\n    NgxMaterialTimepickerModule,\n    HttpClientModule,\n    NgxPageScrollCoreModule.forRoot({duration: 1500}),\n    NgxPageScrollModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: DelayInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [SheduledDeliverModelComponent, AddItemModelComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserLogin } from '../../definitions/User'\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../../services/login.service';\nimport { WriteService } from '../../services/write.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginFormgroup: FormGroup;\n  user: UserLogin;\n  constructor(private loginService:LoginService, \n    private router: Router, \n    private accountState: WriteService) { }\n\n  ngOnInit() {\n    this.loginFormgroup = new FormGroup({\n      username: new FormControl('',Validators.required),\n      password: new FormControl('',Validators.required)\n    }, Validators.required);\n  }\n\n  login(){\n    if(this.loginFormgroup.valid){\n      this.user = {\n        name: this.loginFormgroup.controls.username.value,\n        account:{\n          password:this.loginFormgroup.controls.password.value\n        }\n      } \n\n      this.loginService.logIn(this.user).subscribe(data=>{\n        \n        if(data.access){\n          this.accountState.addAccount(data);\n\n          this.router.navigate([\"/home\"]);\n        }else{\n          Swal.fire('Login', 'Utilizador/password invalido', 'error');\n        }\n      })\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <div>\n        <div style=\"width: 100%; text-align: center; margin-bottom: 30px;\">\n            <img src=\"../../../assets/logo_orig.png\" class=\"fadeIn\">\n        </div>\n        <h1 style=\"margin: 40px 0px; width: 100%;\">Bem Vindo</h1>\n        <span>Entre com o seu numero de télemovel ou endereço e-mail</span>\n        <form class=\"login-input-box\" [formGroup]=\"loginFormgroup\" (ngSubmit)=\"login()\">\n            <mat-form-field appearance=\"outline\" class=\"input-box full-width\" style=\"margin-top: 10px;\">\n                <mat-label>Numero de Télemovel</mat-label>\n                <input matInput placeholder=\"Numero de Télemovel\" class=\"input-text\" formControlName=\"username\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" class=\"input-box full-width\" style=\"margin-top: 10px;\">\n                <mat-label>Password</mat-label>\n                <input type=\"password\" matInput placeholder=\"Password\" class=\"input-text\" formControlName=\"password\">\n            </mat-form-field>\n        </form>\n        <button mat-raised-button class=\"full-width full-height accent-background\" style=\"height: 45px;\" (click)= \"login()\">\n            Login\n        </button>\n        <div style=\"text-align: center; margin-top: 15px;\">\n            <span>Novo na Pede agora? </span> <span><a [routerLink]=\"['/signup']\" routerLinkActive=\"active\">Criar uma conta</a></span>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy } from '@angular/core';\nimport { AddItemModelComponent } from '../add-item-model/add-item-model.component';\nimport { MatDialog } from '@angular/material';\nimport { NavigationStart, Router, Event, ActivationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-meal',\n  templateUrl: './meal.component.html',\n  styleUrls: ['./meal.component.scss']\n})\nexport class MealComponent implements OnDestroy {\n\n  loader = Array(5);\n  produtos:any = null;\n  navSubscription: Subscription;\n  catfoto:string;\n  grupos: Array<any>;\n\n  constructor(private router:Router, public dialog: MatDialog) { \n   this.navSubscription = this.router.events.subscribe((event:Event)=>{\n     if(event instanceof NavigationStart || event instanceof ActivationEnd){\n      this.produtos = this.router.getCurrentNavigation().extras.state ? this.router.getCurrentNavigation().extras.state[0] : undefined;\n      this.catfoto = this.router.getCurrentNavigation().extras.state? this.router.getCurrentNavigation().extras.state[1] : undefined;\n      this.grupos = this.router.getCurrentNavigation().extras.state? this.router.getCurrentNavigation().extras.state[2] : undefined;\n\n       if(!this.produtos){\n         this.produtos = JSON.parse(localStorage.getItem(\"Categoria\"));\n         this.catfoto = localStorage.getItem(\"foto\");\n         this.grupos = JSON.parse(localStorage.getItem('Grupos'));\n       }\n      \n     }\n   })\n  }\n\n  getFoto(){\n    return this.catfoto;\n  }\n\n  ngOnDestroy(): void {\n    this.navSubscription.unsubscribe();\n  }\n\n  addItemDialog(meal): void {\n\n    const dialogRef = this.dialog.open(AddItemModelComponent, {\n      width: '1000px',\n      data: [meal, this.grupos]\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // if (result) {\n      //   this.deliveryDate = result.deliveryDate;\n      //   this.deliveryTime = result.deliveryTime;\n      //   this.selectedDeliveryTime.data = result.deliveryDate + ' ' + result.deliveryTime;\n      // } else {\n      //   this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n      // }\n    });\n  }\n}\n","<div class=\"container\">\n    <ng-container *ngIf=\"!produtos\">\n        <div class=\"card-container\">\n            <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n                flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loader\">\n                <!-- Card with Avatar -->\n                <div class=\"skltn-card\">\n                    <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                    <div class=\"skltn-card__body\">\n                        <div skltn-bone class=\"skltn-card__title\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                    </div>\n                </div>\n            </skltn-root>\n        </div>\n    </ng-container>\n\n    <ng-container>\n        <div class=\"box-wrapper\" *ngFor=\"let item of produtos\" (click)=\"addItemDialog(item)\">\n            <img *ngIf=\"item.foto; else fallback\"[src]=\"item.foto\"/>\n            <ng-template #fallback>\n                <img [src]=\"getFoto()\"/>\n            </ng-template>\n            <div class=\"box-content\">\n                <a class=\"buy\"><span><i class=\"icon\"></i></span></a>\n                <div class=\"title\">{{item.nome}}</div>\n                <div class=\"desc\">{{item.descricao}}</div>\n                <span class=\"price\">{{item.preco}} €</span>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { Injectable } from '@angular/core';\nimport { ReadService } from './read.service';\nimport { Cart } from '../definitions/Cart';\nimport { WriteService } from './write.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n\n  cart: Cart;\n  constructor(private readService: ReadService, private writeService: WriteService) { \n    this.getCart();\n  }\n \n\n  getCart() {\n    this.readService.getCart().subscribe(data=>{\n      this.cart = data;\n    });\n  }\n\n  setTracker(tracker:string){\n    this.cart.tracker = tracker;\n  }\n\n  addToCart(item) {\n   this.writeService.addItem(this.cart, item);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Account, AccountToken } from '../../definitions/Account';\nimport { ReadService } from '../../services/read.service';\nimport { WriteService } from '../../services/write.service';\nimport { ChangeInfoComponentComponent } from '../change-info-component/change-info-component.component';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styleUrls: ['./my-account.component.scss']\n})\nexport class MyAccountComponent implements OnInit {\n\n  currentRoute = \"orders\";\n\n  AccountToken: AccountToken;\n  account: Account;\n  constructor(private router: Router, private matDialog: MatDialog, private readService: ReadService, private writeService: WriteService) { \n    this.readService.getAccount().subscribe(data=>{\n      this.AccountToken = data;\n      console.log(data)\n      if(!this.AccountToken.access){\n        this.router.navigate(['/login']);\n      }\n      this.account = data.account;\n    });\n  }\n\n  changeChildRoute(name){\n    this.currentRoute = name;\n  }\n\n\n  logout(){\n    this.AccountToken = {\n      access:false,\n      account:{} as Account\n    };\n\n    this.writeService.addAccount(this.AccountToken)\n\n    this.router.navigate(['/home']).then(()=>{\n      window.location.reload();\n    });\n  }\n\n\n  editPassword(){\n    const dialogRef = this.matDialog.open(ChangeInfoComponentComponent, {\n      width: '400px',\n      data: this.account\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // if (result) {\n      //   this.deliveryDate = result.deliveryDate;\n      //   this.deliveryTime = result.deliveryTime;\n      //   this.selectedDeliveryTime.data = result.deliveryDate + ' ' + result.deliveryTime;\n      // } else {\n      //   this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n      // }\n    });\n  }\n\n  ngOnInit() {\n  \n  }\n\n}\n","<div class=\"myaccount-container\">\n    <div class=\"myaccount-container-body second-view\">\n        <div class=\"secondary-container-header\">\n            <div class=\"header-text\">\n                <h1 class=\"primary-text\">{{account.nome}}</h1>\n                <span class=\"secondary-text\">\n                    <span>{{account.telefone}}</span>\n                    <span style=\"margin-left: 20px\">{{account.email}}</span>\n                </span>\n            </div>\n            <div class=\"edit-button-container\">\n                <div class=\"edit-button-box\">\n                    <button mat-raised-button class=\"edit-button-text\" (click)=\"editPassword()\">Modificar Password</button>\n                </div>\n                <div class=\"edit-button-box\">\n                    <button mat-raised-button class=\"edit-button-text\" (click)=\"logout()\">Logout</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"list-view\">\n                <div class=\"list-box\">\n                    <ul>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'orders'}\" (click)=\"changeChildRoute('orders')\" [routerLink]=\"['/my-account/orders']\" routerLinkActive=\"active\">\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        all_out\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Pedidos\n                                </span>\n                            </span>\n                        </li>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'favourites'}\" (click)=\"changeChildRoute('favourites')\"  [routerLink]=\"['/my-account/favourites']\" routerLinkActive=\"active\" disabled>\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        favorite_border\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Favoritos\n                                </span>\n                            </span>\n                        </li>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'payments'} \" (click)=\"changeChildRoute('payments')\"  [routerLink]=\"['/my-account/payments']\" routerLinkActive=\"active\">\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        payment\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Métodos de pagamento\n                                </span>\n                            </span>\n                        </li>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'addresses'}\" (click)=\"changeChildRoute('addresses')\" [routerLink]=\"['/my-account/addresses']\" routerLinkActive=\"active\">\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        near_me\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Moradas\n                                </span>\n                            </span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"result-view\">\n                <div class=\"result-box\">\n                   <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"footer\">\n        <div class=\"container\">\n            <div class=\"first\">\n                    <img src=\"../assets/logo_orig (1).png\">\n            </div>\n            <div class=\"second\">\n                <h4>Ajuda</h4>\n                <ul class=\"list\" style=\"line-height: 2.5;\">\n                    <li>Informaçoes de entregas</li>\n                    <li>Devoluções e Trocas</li>\n                    <li>Termos e condições</li>\n                    <li>Política de Privacidade</li>\n                </ul>\n            </div>\n            <div class=\"third\">\n                <h4>Tem Perguntas ?</h4>\n                <p>Endereço completamente falso so pra testar</p>\n                <p>+351 123 456 789</p>\n                <p>geral@pedeagora.com</p>\n            </div>\n        </div>\n        <div class=\"copyright\">\n            <p>Coisas sobre copyright vao pra aqui</p>\n        </div>\n    </div>","import { AccountToken, Account } from '../definitions/Account';\r\nimport * as AccountActions from '../actions/account.action';\r\n\r\n\r\nconst initialState:AccountToken = {\r\n    access: false,\r\n    account:{} as Account\r\n}\r\n\r\nexport function reducerAccount(state: AccountToken = initialState, action: AccountActions.Actions) {\r\n    switch(action.type){\r\n        case AccountActions.ADD_ACCOUNT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Action } from '@ngrx/store';\r\nimport { Cart } from '../definitions/Cart';\r\n\r\nexport const REMOVE_CART = `[CART] Remove`;\r\nexport const SAVE_CART = `[CART] Save`;\r\nexport const ADD_ORDER = `[CART] Add`;\r\nexport const UPDATE_ORDER = `[CART] Update`;\r\n\r\nexport const STORAGE_KEYS = {\r\n  cart: `CART`\r\n}\r\n\r\nexport class SaveCart implements Action {\r\n    readonly type = SAVE_CART;\r\n\r\n    constructor(public payload: Cart){}\r\n}\r\n\r\nexport class AddOrder implements Action {\r\n    readonly type = ADD_ORDER;\r\n  \r\n    constructor(public cart: Cart, public order){\r\n    }\r\n}\r\n\r\nexport class DeleteCart implements Action {\r\n    readonly type = REMOVE_CART;\r\n  \r\n    constructor(){\r\n    }\r\n}\r\n\r\nexport class UpdateOrder implements Action {\r\n    readonly type = UPDATE_ORDER;\r\n\r\n    constructor(public newItem) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type Actions = SaveCart | AddOrder | DeleteCart | UpdateOrder;","import * as RestaurantActions from '../actions/restaurant.action';\r\nimport { Restaurant } from '../definitions/Restaurant';\r\n\r\n\r\nconst initialState:Restaurant = {} as Restaurant;\r\n\r\nexport function reducerSelectedRestaurant(state: Restaurant = initialState, action: RestaurantActions.Actions) {\r\n    switch(action.type){\r\n        case RestaurantActions.SELECT_RESTAURANT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Account } from '../../definitions/Account';\nimport { ReadService } from '../../services/read.service';\nimport { NewAddressComponent } from './new-address/new-address.component';\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.component.html',\n  styleUrls: ['./addresses.component.scss']\n})\nexport class AddressesComponent implements OnInit {\n  \n  public conta:Account;\n  fullComponent:boolean = true;\n\n  constructor(private readService:ReadService, private matDialog: MatDialog) { }\n\n  ngOnInit() {\n    this.readService.getAccount().subscribe(data=>{\n      this.conta = data.account;\n    });\n  }\n\n  createNewAddress(){\n    const dialogRef = this.matDialog.open(NewAddressComponent, {\n      width: '1000px'\n    });\n\n  }\n}\n","<div *ngIf=\"fullComponent\">\n    <h1>Gerir Moradas</h1>\n</div>\n<div class=\"address-box-container\">\n    <div *ngFor=\"let morada of conta.moradas\" class=\"address-box-card\">\n        <div class=\"address-box-header\">\n            <mat-icon fontSet=\"material-icons-outlined\">{{morada.type}}</mat-icon>\n            <h3 style=\" margin-left: 10px\">{{morada.name}}</h3>\n        </div>\n        <div class=\"address-box-footer\">\n            <span>{{morada.rua}}</span>\n            <div>{{morada.codigoPostal}} - {{morada.cidade}}</div>\n        </div>\n    </div>\n    <button mat-button>\n        <mat-icon class=\"material-icons\">add</mat-icon>\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-change-info-component',\n  templateUrl: './change-info-component.component.html',\n  styleUrls: ['./change-info-component.component.scss']\n})\nexport class ChangeInfoComponentComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ChangeInfoComponentComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"password-change-container\">\n    <div class=\"model-header\">\n        <h4>Modificar Password</h4>\n    </div>\n    <div class=\"model-body\">\n        <div>\n            <mat-form-field>  \n                <mat-label>Password anterior</mat-label>  \n                <input matInput type=\"password\">  \n            </mat-form-field>  \n        </div>\n        <div>\n            <mat-form-field>  \n                <mat-label>Password Nova</mat-label>  \n                <input matInput type=\"password\">  \n            </mat-form-field>  \n        </div>\n        <div>\n            <mat-form-field>  \n                <mat-label>Repita a nova Password</mat-label>  \n                <input matInput type=\"password\">  \n            </mat-form-field >  \n        </div>\n    </div>\n    <div class=\"model-footer flex-item-center\">\n        <div class=\"small-gap\"></div>\n        <button mat-raised-button class=\"full-width full-height success-background\" \n          [mat-dialog-close]=\"true\" cdkFocusInitial>\n          <div>\n            Modificar\n          </div>\n        </button>\n    </div>\n</div>","import { Action } from '@ngrx/store';\r\nimport { Restaurant } from '../definitions/Restaurant';\r\n\r\nexport const SELECT_RESTAURANT = `[RESTAURANT] Select`;\r\n\r\nexport const STORAGE_KEYS = {\r\n  selectedRestaurant: `SELECTED_RESTAURANT`\r\n}\r\n\r\nexport class SelectRestaurant implements Action {\r\n    readonly type = SELECT_RESTAURANT;\r\n\r\n    constructor(public payload: Restaurant){}\r\n}\r\n \r\nexport type Actions = SelectRestaurant;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './shared/login/login.component';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { MyAccountComponent } from './account/my-account/my-account.component';\nimport { FavouritesComponent } from './account/favourites/favourites.component';\nimport { OrdersComponent } from './account/orders/orders.component';\nimport { PaymentsComponent } from './account/payments/payments.component';\nimport { AddressesComponent } from './account/addresses/addresses.component';\nimport { SingleRestaurantComponent } from './single-restaurant/single-restaurant.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { MealComponent } from './single-restaurant/meal/meal.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'home', component: HomeComponent\n  },\n  {\n    path: 'restaurants/:id', component: SingleRestaurantComponent,\n    children:[\n      {\n        path:':categoria', component: MealComponent\n      },\n    ]\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'signup', component: SignupComponent\n  },\n  {\n    path: 'checkout', component: CheckoutComponent\n  },\n  {\n    path: 'my-account', component: MyAccountComponent,\n    children: [\n      {\n        path: 'favourites', component: FavouritesComponent\n      },\n      {\n        path: 'orders', component: OrdersComponent\n      },\n      {\n        path: 'payments', component: PaymentsComponent\n      },\n      {\n        path: 'addresses', component: AddressesComponent\n      },\n      {\n        path: '', redirectTo: 'orders', pathMatch: 'full'\n      },\n      {\n        path: '**', redirectTo: 'orders', pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '', redirectTo: 'home', pathMatch: 'full'\n  },\n  {\n    path: '**', redirectTo: 'home', pathMatch: 'full'\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {anchorScrolling: 'enabled', useHash: false})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}