{"version":3,"sources":["./src/app/account/addresses/new-address/new-address.component.ts","./src/app/account/addresses/new-address/new-address.component.html","./src/app/reducers/cart.reducer.ts","./src/app/shared/header/header.component.ts","./src/app/shared/header/header.component.html","./src/app/shared/signup/signup.component.ts","./src/app/shared/signup/signup.component.html","./src/app/shared/sheduled-deliver-model/sheduled-deliver-model.component.ts","./src/app/shared/sheduled-deliver-model/sheduled-deliver-model.component.html","./src/app/single-restaurant/add-item-model/add-item-model.component.ts","./src/app/single-restaurant/add-item-model/add-item-model.component.html","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/environments/environment.ts","./src/app/services/delay-interceptor.service.ts","./src/app/services/login.service.ts","./src/app/account/payments/payments.component.ts","./src/app/account/payments/payments.component.html","./src/app/single-restaurant/single-restaurant.component.html","./src/app/single-restaurant/single-restaurant.component.ts","./src/app/account/orders/orders.component.html","./src/app/account/orders/orders.component.ts","./src/app/actions/account.action.ts","./src/app/checkout/checkout.component.html","./src/app/checkout/checkout.component.ts","./src/app/services/orders.service.ts","./src/app/account/favourites/favourites.component.html","./src/app/account/favourites/favourites.component.ts","./src/app/services/write.service.ts","./src/app/services/read.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/restaurant.service.ts","./src/app/app.module.ts","./src/app/shared/login/login.component.ts","./src/app/shared/login/login.component.html","./src/app/single-restaurant/meal/meal.component.ts","./src/app/single-restaurant/meal/meal.component.html","./src/app/services/cart.service.ts","./src/app/account/my-account/my-account.component.ts","./src/app/account/my-account/my-account.component.html","./src/app/shared/footer/footer.component.ts","./src/app/shared/footer/footer.component.html","./src/app/reducers/account.reducer.ts","./src/app/actions/cart.actions.ts","./src/app/reducers/selectedRestaurant.reducer.ts","./src/app/account/addresses/addresses.component.ts","./src/app/account/addresses/addresses.component.html","./src/app/account/change-info-component/change-info-component.component.ts","./src/app/account/change-info-component/change-info-component.component.html","./src/app/actions/restaurant.action.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-new-address',\n  templateUrl: './new-address.component.html',\n  styleUrls: ['./new-address.component.scss']\n})\nexport class NewAddressComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>new-address works!</p>\n","import * as  CartActions  from '../actions/cart.actions';\r\nimport { Cart } from '../definitions/Cart';\r\n\r\nconst initialState: Cart = {\r\n    tracker : '',\r\n    orders : new Array(),\r\n}\r\n\r\nexport function reducerCart(state: Cart = initialState, action: CartActions.Actions) {\r\n    switch(action.type){\r\n        case CartActions.SAVE_CART:\r\n            return action.payload;\r\n        case CartActions.ADD_ORDER:\r\n            return {\r\n                tracker: action.cart.tracker,\r\n                orders: [...state.orders, action.order]\r\n            }\r\n        case CartActions.UPDATE_ORDER:\r\n            return {\r\n                tracker: state.tracker,\r\n                orders: [...replaceItem(state.orders,action.newItem)]\r\n            }      \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst replaceItem = (orders:Array<any>, newItem) =>{\r\n    const arr = [...orders];\r\n    arr.splice(orders.findIndex(item=>item.id == newItem.id), 1);\r\n    \r\n    if(newItem.quantidade < 1){\r\n        return [...arr];\r\n    }\r\n\r\n    arr.push(newItem);\r\n    return [...arr];\r\n}","import { Component, OnInit, ViewChildren, QueryList } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder } from '@angular/forms';\nimport { MatDialog, MatSelectChange } from '@angular/material';\nimport { SheduledDeliverModelComponent } from '../sheduled-deliver-model/sheduled-deliver-model.component';\nimport { element } from 'protractor';\nimport { Router, ActivatedRoute, UrlSegment, NavigationEnd } from '@angular/router';\nimport { MdePopoverTrigger } from '@material-extended/mde';\nimport { User } from '../../interfaces/Ilogin';\nimport { RestaurantService } from '../../services/restaurant.service';\nimport { LoginService } from '../../services/login.service';\nimport { Console } from 'node:console';\nimport { WriteService } from '../../services/write.service';\nimport { ReadService } from '../../services/read.service';\nimport { Account } from '../../definitions/Account';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @ViewChildren(MdePopoverTrigger) trigger: QueryList<MdePopoverTrigger>;\n  user: Account;\n  quantityList = [1,2,3,4,5,6,7,8,9,10];\n  deliveryTimeSelection = [\n    {\n      'icon': 'access_time',\n      'title': 'Entregar Já'\n    },\n    {\n      'icon': 'calendar_today',\n      'title': 'Planear pra mais tarde'\n    }\n  ];\n\n  deliveryAddresses = new Array();\n  searchableFoods;\n\n  cartItems = new Array();\n  selectedDeliveryTime: any;\n  selectedAddress: any;\n  selectedSearchFood: any;\n\n  firstName: string;\n  deliveryDate: string;\n  deliveryTime: string;\n  currentRoute: string;\n  loggedIn: boolean;\n\n  constructor(\n    public dialog: MatDialog,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private restaurantService: RestaurantService,\n    private loginService: LoginService,\n    private writeService: WriteService,\n    private readService: ReadService,\n  ) { \n    this.router.events.subscribe(\n      (event: any) => {\n        if (event instanceof NavigationEnd) {\n          this.currentRoute = this.router.url;\n        }\n      }\n    );\n  }\n\n  ngOnInit() {  \n    this.loadToken();\n    this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n    this.selectedAddress = this.deliveryAddresses[0];\n    this.readService.getCart().subscribe(data=>{\n      this.cartItems = data.orders;\n    })\n  }\n\n  selectDefaultAddress(listOfAddresses) {\n    listOfAddresses.forEach(element => {\n      if (element.default) {\n        this.selectedAddress = element;\n      }\n    });\n  }\n\n  inputAddressBoxEnable = false;\n  addressButtonToggle() {\n    this.inputAddressBoxEnable = !this.inputAddressBoxEnable;\n  }\n  \n  searchInputBoxEnable = false;\n  searchButtonToggle() {\n    this.searchableFoods = this.restaurantService.getTags().slice(0,5);\n    this.searchInputBoxEnable = !this.searchInputBoxEnable;\n  }\n\n  deliveryTimeSelectionChange(event) {\n    if (this.selectedDeliveryTime.title == \"Scheduler For Later\") {\n      this.openDialog();\n    }\n  }\n\n  enableClosePopover;\n  openDialog(): void {\n    const dialogRef = this.dialog.open(SheduledDeliverModelComponent, {\n      width: '450px',\n      data: { deliveryDate: this.deliveryDate, deliveryTime: this.deliveryTime }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.deliveryDate = result.deliveryDate;\n        this.deliveryTime = result.deliveryTime;\n        this.selectedDeliveryTime.data = result.deliveryDate + ' ' + result.deliveryTime;\n      } else {\n        this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n      }\n    });\n  }\n\n  deliveryAddressChange(event) {\n    console.log(event);\n  }\n\n  calcularItem(item):number{\n    let total = (item.preco + item.extras[1]) * item.quantidade;\n\n    if(item.extras[3].length > 0){\n      item.extras[3].forEach(extra=>{\n        total += extra.preco;\n      });\n    }\n\n    return total;\n  }\n\n  calculateTotalPriceOfCart () : number{\n    let total = 0;\n    \n    this.cartItems.forEach(element => {\n      total += (element.preco + element.extras[1] * element.quantidade);\n      if(element.extras[3].length > 0){\n        element.extras[3].forEach(extra=>{\n          total += extra.preco;\n        });\n      }\n    });\n    \n    return total;\n  }\n\n  logout() {\n    this.user = null;\n    this.router.navigate(['home']);\n  }\n\n  addToCart(event: MatSelectChange, item): void {\n    let newItem = Object.assign({}, item);\n    newItem.quantidade = event.value;\n    this.writeService.updateItem(newItem);\n  }\n\n  removeFromCart(item){\n    let newItem = Object.assign({},item);\n    newItem.quantidade = 0;\n    this.writeService.updateItem(newItem);\n  }\n\n  closeCartPopover() {\n    this.trigger.toArray()[0].togglePopover();\n  }\n\n  private loadToken(){\n    this.readService.getAccount().subscribe(data=>{\n      if(data){\n        let token: string = this.readService.extractToken(data);\n        if(token){\n          this.loginService.validateToken(token).subscribe(data=>{\n            if(!data  || data.error){\n              this.router.navigate(['/login']);\n            }\n            data.account.token = token;\n            this.user = data.account;\n            this.loggedIn = true;\n            this.firstName = this.user.nome.split(' ')[0].trim();\n          });\n        }\n      }\n    });\n  }\n  \n}\n\n\nexport interface ScheduleTime {\n  deliveryDate: string;\n  deliveryTime: string;\n}","<div class=\"header-container\" *ngIf=\"currentRoute !== '/login' &&  currentRoute !== '/signup'\">\n    <div class=\"contain flex-with-space-between white-background\">\n        <div class=\"left-container flex-item-center flex1 full-height\">\n            <a class=\"logo\" routerLink=\"restaurant\">\n                <img src=\"../assets/logo.png\">\n            </a>\n            <div class=\"large-gap\"></div>\n            <ng-container *ngIf=\"selectedAddress\">\n                <button class=\"hide-mobile-view\" mat-button (click)=\"addressButtonToggle()\" *ngIf=\"!inputAddressBoxEnable\">\n                    <div class=\"header-menu-box\" style=\"max-width: 460px;\">\n                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">{{selectedAddress.icon}}</mat-icon>\n                        <div class=\"very-small-gap\"></div>\n                        <span class=\"header-menu-text\" style=\"max-width: 420px;\">{{selectedAddress.address}}</span>\n                    </div>\n                </button>\n                <mat-form-field class=\"hide-mobile-view\" *ngIf=\"inputAddressBoxEnable\" (keyup.enter)=\"addressButtonToggle()\"\n                    style=\"min-width: 380px; margin-top: 10px; \">\n                    <input matInput type=\"text\" [(ngModel)]=\"selectedAddress.address\" (blur)=\"addressButtonToggle()\"\n                        [matAutocomplete]=\"auto\" style=\" padding-bottom: 5px; font-size: 14px;\">\n                    <mat-icon fontSet=\"material-icons-outlined\" matPrefix mat-icon-button class=\"icon\"\n                        style=\"margin-right: 5px;\">{{selectedAddress.icon}}</mat-icon>\n                    <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\"\n                        (selectionChange)=\"deliveryAddressChange($event)\">\n                        <mat-option *ngFor=\"let deliveryAddress of deliveryAddresses\" [value]=\"deliveryAddress.address\"\n                            style=\"height: 80px;\">\n                            <div style=\"display: -webkit-box;\">\n                                <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\"\n                                    style=\"margin-right: 5px;\">{{deliveryAddress.icon}}</mat-icon>\n                                <div class=\"flex-column\">\n                                    <span>{{deliveryAddress.title}}</span>\n                                    <label>{{deliveryAddress.address}}</label>\n                                </div>\n                            </div>\n                        </mat-option>\n                    </mat-autocomplete>\n                </mat-form-field>\n            </ng-container>\n\n            <div class=\"small-gap\"></div>\n            <mat-form-field class=\"hide-mobile-view\" appearance=\"none\" style=\"min-width: 190px; margin-top: 10px;\">\n                <mat-select [(ngModel)]=\"selectedDeliveryTime\" (selectionChange)=\"deliveryTimeSelectionChange($event)\">\n                    <mat-select-trigger>\n                        <div class=\"header-menu-box\" style=\"white-space: initial;\">\n                            <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">{{selectedDeliveryTime.icon}}\n                            </mat-icon>\n                            <div class=\"very-small-gap\"></div>\n                            <span class=\"header-menu-text\" *ngIf=\"selectedDeliveryTime.data\">\n                                {{selectedDeliveryTime.data}}\n                            </span>\n                            <span class=\"header-menu-text\" *ngIf=\"!selectedDeliveryTime.data\">\n                                {{selectedDeliveryTime.title}}\n                            </span>\n\n                        </div>\n                    </mat-select-trigger>\n                    <mat-option *ngFor=\"let time of deliveryTimeSelection\" [value]=\"time\">\n                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">{{time.icon}}</mat-icon>{{time.title}}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n        <div class=\"reverse-flex flex1 full-height\">\n            <a mat-button [mdePopoverTriggerFor]=\"cartPopover\" [mdePopoverOffsetX]=\"0\" [mdePopoverOffsetY]=\"55\"\n                mdePopoverTriggerOn=\"click\" *ngIf=\"cartItems && cartItems.length > 0\">\n                <div class=\"header-menu-box\">\n                    <mat-icon fontSet=\"material-icons-outlined\">shopping_cart</mat-icon>\n                    <div class=\"micro-gap\"></div>\n                    <span class=\"header-menu-text\">{{cartItems.length}}</span>\n                </div>\n            </a>\n            <div class=\"very-small-gap\"></div>\n            <a mat-button *ngIf=\"loggedIn; else conta\" [routerLink]=\"['/my-account']\" routerLinkActive=\"active\">\n                <div class=\"header-menu-box\">\n                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">person</mat-icon>\n                    <div class=\"very-small-gap\"></div>\n                    <span class=\"header-menu-text\">{{firstName}}</span>\n                </div>\n            </a>\n            <ng-template #conta>\n                <a mat-button [routerLink]=\"['/login']\" routerLinkActive=\"active\">\n                    <div class=\"header-menu-box\">\n                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">person</mat-icon>\n                        <div class=\"very-small-gap\"></div>\n                        <span class=\"header-menu-text\">Login</span>\n                    </div>\n                </a>\n            </ng-template>\n            <button mat-button (click)=\"searchButtonToggle()\" *ngIf=\"!searchInputBoxEnable\" class=\"hide-mobile-view\">\n                <div class=\"header-menu-box\">\n                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">search</mat-icon>\n                    <div class=\"very-small-gap\"></div>\n                    <span class=\"header-menu-text\">Pesquisar</span>\n                </div>\n            </button>\n            <mat-form-field style=\"margin-top: 10px;\" *ngIf=\"searchInputBoxEnable\" (keyup.enter)=\"searchButtonToggle()\" \n                floatLabel=\"never\">\n                <input matInput type=\"text\" placeholder=\"O que lhe apetece\" (blur)=\"searchButtonToggle()\"\n                    [matAutocomplete]=\"auto\" style=\" padding-bottom: 5px; font-size: 14px;\">\n                <mat-icon fontSet=\"material-icons-outlined\" matPrefix mat-icon-button class=\"icon\"\n                    style=\"margin-right: 5px;\">access_time</mat-icon>\n                <button mat-button matSuffix mat-icon-button aria-label=\"Clear\">\n                    <mat-icon style=\"padding-bottom: 5px;\">close</mat-icon>\n                </button>\n                <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n                    <mat-option *ngFor=\"let food of searchableFoods\" [value]=\"food\">\n                        <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\"\n                            style=\"margin-right: 5px;\">access_time</mat-icon>\n                        <span>{{food}}</span>\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n        </div>\n    </div>\n</div>\n<mde-popover #cartPopover=\"mdePopover\" [mdePopoverCloseOnClick]=\"enableClosePopover\">\n    <div class=\"popover cart-card flex-column\" *ngIf=\"cartItems && cartItems.length > 0\">\n        <div class=\"cart-card-header flex-with-space-between padding-horizontaly\">\n            <div class=\"flex-item-center\">\n                <mat-icon fontSet=\"material-icons-outlined\">shopping_cart</mat-icon>\n                <div class=\"very-small-gap\"></div>\n                <h2>O Seu pedido ({{cartItems.length}})</h2>\n            </div>\n            <mat-icon fontSet=\"material-icons-outlined\" (click)=\"closeCartPopover()\">close</mat-icon>\n        </div>\n        <div class=\"cart-card-body\">\n            <ul>\n                <li class=\"flex-with-space-between padding\" *ngFor=\"let item of cartItems\">\n                    <div class=\"flex-item-center\">\n                        <mat-form-field style=\"width: 30px; background: transparent\" color=\"dark\">\n                            <mat-select style=\"text-align: center !important;\" [ngModel]=\"item.quantidade\"\n                                (selectionChange)=\"addToCart($event, item)\">\n                                <mat-option *ngFor=\"let quantityValue of quantityList\" [value]=\"quantityValue\"\n                                    style=\"margin-left: 5px !important;\">\n                                    {{quantityValue}}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                        <div class=\"small-gap\"></div>\n                        <div class=\"flex-column\">\n                            <span>{{item.nome}}</span>\n                            <div class=\"flex-column label-small\" *ngIf=\"item.extras[0]\">\n                                <mat-label>{{item.extras[0]}}<mat-label *ngIf=\"item.extras[3].length > 0\"> + {{item.extras[3].length}} complemento(s)</mat-label></mat-label>\n                            </div>\n                            <a style=\"margin-top: 5px;\" class=\"accent\" (click)=\"removeFromCart(item)\">Retirar </a>\n                        </div>\n                       \n                    </div>\n                    <span>{{calcularItem(item).toFixed(2)}} €</span>\n                </li>\n            </ul>\n        </div>\n        <div class=\"cart-card-footer padding\">\n            <button mat-raised-button [routerLink]=\"['/checkout']\" (click)=\"closeCartPopover()\"  class=\"full-width full-height success-background \">\n                <div class=\"flex-with-space-between\">\n                    <span>\n                        Finalizar pedido\n                    </span>\n                    <span>\n                        {{calculateTotalPriceOfCart().toFixed(2)}} €\n                    </span>\n                </div>\n            </button>\n        </div>\n    </div>\n</mde-popover>","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../services/login.service';\nimport { WriteService } from '../../services/write.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signInFormGroup: FormGroup;\n\n  constructor(private loginService: LoginService, private router: Router, private writeService: WriteService) {}\n\n  ngOnInit() {\n    this.signInFormGroup= new FormGroup({\n      nome: new FormControl('', Validators.required),\n      apelido: new FormControl(''),\n      nif: new FormControl(''),\n      telefone: new FormControl('', Validators.minLength(9)),\n      email: new FormControl('', Validators.email),\n      password: new FormControl('', Validators.required),\n      morada :new FormControl('',Validators.required),\n      codigopostal: new FormControl('', Validators.required),\n      cidade: new FormControl('', Validators.required)\n    });\n  }\n\n  signUp() {\n    if(this.signInFormGroup.valid) {\n      this.loginService.signIn(this.signInFormGroup.value).subscribe(data=>{\n        \n        if(data){\n          this.writeService.addAccount(data);\n          this.router.navigate(['/home'])\n        }\n      });\n    }\n  }\n  \n\n\n}\n\n\n","<div class=\"signup-container\">\n    <div class=\"signup-logo\">\n        <img src=\"../assets/logo_orig.png\" class=\"fadeIn\">\n    </div>\n    <div class=\"signup-form\">\n        <form [formGroup]=\"signInFormGroup\" (ngSubmit)=\"signUp()\">\n            <div class=\"signup-data-column\">\n                <div style=\"margin-bottom: 10px;\">Criar uma conta com numero de telefone e E-mail</div>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Nome</mat-label>\n                    <input matInput placeholder=\"Nome\" class=\"input-text full-width\" type=\"text\" formControlName=\"nome\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Apelido</mat-label>\n                    <input matInput placeholder=\"Apelido\" class=\"input-text full-width\" type=\"text\" formControlName=\"apelido\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>NIF</mat-label>\n                    <input matInput placeholder=\"NIF\" class=\"input-text full-width\" type=\"text\" formControlName=\"nif\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box half-width\" >\n                    <mat-label>Numero de telefone</mat-label>\n                    <input matInput placeholder=\"Numero de telefone\" class=\"input-text\" formControlName=\"telefone\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box half-width\">\n                    <mat-label>Endereço E-mail</mat-label>\n                    <input matInput placeholder=\"Endereço E-mail\" class=\"input-text\" formControlName=\"email\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Password</mat-label>\n                    <input matInput placeholder=\"Password\" class=\"input-text full-width\" type=\"password\" formControlName=\"password\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box full-width\" >\n                    <mat-label>Repita a password</mat-label>\n                    <input matInput placeholder=\"Repita a password\" class=\"input-text\" type=\"password\">\n                </mat-form-field>\n            </div>\n            <div class=\"signup-data-column\">\n                <mat-form-field appearance=\"outline\" class=\"input-box half-width\" >\n                    <mat-label>Morada</mat-label>\n                    <input matInput placeholder=\"Morada\" class=\"input-text\" type=\"text\" formControlName=\"morada\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box fourth-width\" >\n                    <mat-label>Código Postal</mat-label>\n                    <input matInput placeholder=\"Código Postal\" class=\"input-text\" type=\"text\" formControlName=\"codigopostal\">\n                </mat-form-field>\n                <mat-form-field appearance=\"outline\" class=\"input-box fourth-width\" >\n                    <mat-label>Cidade/Vila</mat-label>\n                    <input matInput placeholder=\"Cidade/Vila\" class=\"input-text\" type=\"text\" formControlName=\"cidade\">\n                </mat-form-field>\n            </div>\n            <div>\n                <button mat-raised-button type=\"submit\" class=\"full-width full-height accent-background\" style=\"height: 45px;\">\n                    Criar Conta\n                </button>\n                <div style=\"text-align: center; margin-top: 15px;\">\n                    <span>Já tem uma conta?</span> \n                    <span>\n                        <a [routerLink]=\"['/login']\" routerLinkActive=\"active\"> login</a>\n                    </span>\n                </div>\n            </div>\n        </form>\n    </div>\n  \n</div>","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { ScheduleTime } from '../header/header.component';\n\n@Component({\n  selector: 'app-sheduled-deliver-model',\n  templateUrl: './sheduled-deliver-model.component.html',\n  styleUrls: ['./sheduled-deliver-model.component.scss']\n})\nexport class SheduledDeliverModelComponent implements OnInit {\n  dates = [\n    \"Today, Mon, 21 Oct\",\n    \"Tomorrow, Tue, 22 Oct\",\n    \"Wed, 23 Oct\",\n    \"Thu, 24 Oct\",\n    \"Fri, 25 Oct\",\n    \"Sat, 26 Oct\",\n    \"Sun, 27 Oct\"\n  ];\n  times = [\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n    \"01:00 am – 01:30 am\",\n\n  ];\n  constructor(\n    public dialogRef: MatDialogRef<SheduledDeliverModelComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ScheduleTime\n    ) {\n     \n    }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    if (!this.data.deliveryDate) {\n      this.data.deliveryDate = this.dates[0];\n      this.data.deliveryTime = this.times[0];\n    }\n  }\n\n}\n","<div class=\"scheduled-model-container\">\n  <div class=\"model-header\">\n    <h2>Schedule delivery time</h2>\n    <button mat-mini-fab color=\"default\">\n      <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\" (click)=\"onNoClick()\">close</mat-icon>\n    </button>\n  </div>\n  <div class=\"model-body\">\n    <div class=\"dropdown\">\n      <h4>Date</h4>\n      <mat-form-field floatLabel=\"never\" class=\"full-width\">\n        <mat-select [(ngModel)]=\"data.deliveryDate\">\n          <mat-option *ngFor=\"let date of dates\" [value]=\"date\">\n            {{date}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n    <div class=\"dropdown\">\n      <h4>Time</h4>\n      <mat-form-field floatLabel=\"never\" class=\"full-width\">\n        <mat-select [(ngModel)]=\"data.deliveryTime\">\n          <mat-option *ngFor=\"let time of times\" [value]=\"time\">\n            {{time}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"model-footer\">\n    <button mat-raised-button class=\"full-width full-height success-background\" [mat-dialog-close]=\"data\"\n      cdkFocusInitial>\n      Set delivery time\n    </button>\n  </div>\n</div>","import { Component, OnInit, Inject, Output, EventEmitter, Input } from '@angular/core';\nimport { AbstractControl, FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatCheckboxChange, MatDialogRef, MatRadioChange, MAT_DIALOG_DATA } from '@angular/material';\nimport { CartService } from '../../services/cart.service';\n\n@Component({\n  selector: 'app-add-item-model',\n  templateUrl: './add-item-model.component.html',\n  styleUrls: ['./add-item-model.component.scss']\n})\nexport class AddItemModelComponent implements OnInit {\n\n  subOptions;\n  itemCount = 1;\n  produto;\n  grupos;\n\n  @Input()\n  isDisabled: boolean = false;\n\n  extra:any = {\n    preco:0,\n  };\n\n  radioOption = new Array();\n  extraPrice:number = 0;\n  options = new Array();\n  optionPrice: number = 0;\n\n  price:number;\n\n  @Input()\n  totalPrice:number = 0;\n\n  @Output()\n  changeRadio: EventEmitter<MatRadioChange>\n\n  totalSelected: number = 0;\n\n  constructor(\n    public dialogRef: MatDialogRef<AddItemModelComponent>,\n    @Inject(MAT_DIALOG_DATA) public data,\n    private cartService: CartService\n  ) {\n    this.produto = Object.assign({}, data[0]); \n    this.grupos = [...data[1]]; \n\n    if (this.produto.quantidade > 0) {\n      this.itemCount = this.produto.quantidade;\n    }\n\n    if(this.produto.tamanhos.length > 0){\n      this.isDisabled = true;\n    }\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  add() {\n    this.itemCount += 1;\n  }\n\n  remove() {\n    this.itemCount -= 1;\n  }\n\n\n  onChange(radio: MatRadioChange){\n    if(radio.value.grupos?.length > 0){\n      this.subOptions = true;\n    }\n\n    this.totalSelected++;\n\n    if(this.subOptions){\n      this.isDisabled = true;\n    }else{\n      this.isDisabled = false;\n    }\n\n    this.extra = radio.value;\n  }\n\n  onChangeExtra(radio: MatRadioChange){\n    this.radioOption[radio.source.name] = radio.value;\n\n    this.extraPrice = 0;\n\n    this.radioOption.forEach(data=>{\n      this.extraPrice += data;\n    });\n    this.totalSelected++;\n\n    if(this.subOptions && this.totalSelected > 2){\n      this.isDisabled = false;\n    }\n  }\n\n  parseTamanho(tamanho){\n    return {\n      nome: tamanho.nome,\n      preco: tamanho.preco,\n      grupos: tamanho.grupos,\n    }\n  }\n\n  onChangeCheckBox(check: MatCheckboxChange){\n    let value:any = check.source.value;\n    \n    if(check.checked){\n      this.options.push(value)\n    }else{\n      this.options = this.options.filter(val => val.id != value.id);\n    }\n    this.optionPrice = 0;\n    this.options.forEach(data=>{\n      this.optionPrice += data.preco;\n    })\n  }\n\n  ngOnInit() {\n    // if (!this.data.deliveryDate) {\n    //   this.data.deliveryDate = this.dates[0];\n    //   this.data.deliveryTime = this.times[0];\n    // }\n  }\n\n  addToCart() {\n    this.totalSelected = 0\n    this.produto.quantidade = this.itemCount;\n    this.produto.extras = [this.extra.nome, this.extra.preco , this.radioOption, this.options];\n    this.cartService.addToCart(this.produto);\n  }\n\n}\n","<div class=\"add-item-model-container\">\n  <div class=\"model-header\">\n    <div class=\"flex-item-center\">\n      <img *ngIf=\"produto.type === 'veg'\"\n        src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/511904b5d7cd6881bc88882d4089e3bb.svg\" width=\"12px\" height=\"12px\">\n      <img *ngIf=\"produto.type === 'nonveg'\"\n        src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/d049360b6709dd54ea5ff0689849db7a.svg\" width=\"12px\" height=\"12px\">\n      <div class=\"very-small-gap\"></div>\n      <h1>{{produto.nome}}</h1>\n    </div>\n    <button mat-mini-fab color=\"default\" (click)=\"onNoClick()\">\n      <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\">close</mat-icon>\n    </button>\n  </div>\n  <div class=\"model-body\">\n    <div *ngIf=\"produto.tamanhos.length > 0; else grupos\">\n      <div class=\"instruction\">\n        <span style=\"padding: 0px 20px;\">*Tamanhos:</span>\n        <div>\n          <mat-radio-group (change)=\"onChange($event)\" name=\"tamanhos\" [required]=\"true\">\n              <mat-radio-button  *ngFor=\"let tamanho of produto.tamanhos\" [name]=\"tamanho.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"parseTamanho(tamanho)\">{{tamanho.nome}}<mat-label>(+{{tamanho.preco}}€)</mat-label></mat-radio-button>\n          </mat-radio-group>\n        </div>\n      </div>\n      <div *ngIf=\"subOptions\">\n        <div class=\"options\" *ngFor=\"let extra of extra.grupos\">\n          <ng-container *ngIf=\"extra.force_min > 0; else checkExtra\">\n            <span style=\"padding: 15px 20px;\">*{{extra.nome}}</span>\n            <div>\n              <mat-radio-group (change)=\"onChangeExtra($event)\" [name]=\"extra.nome\">\n                  <mat-radio-button  *ngFor=\"let opcao of extra.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-radio-button>\n              </mat-radio-group>\n            </div>\n          </ng-container>\n          <ng-template #checkExtra>\n            <span style=\"padding: 15px 20px;\">{{extra.nome}}</span>\n            <div>\n              <mat-checkbox (change)=\"onChangeCheckBox($event)\" *ngFor=\"let opcao of extra.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-checkbox>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n    <ng-template *ngFor=\"let grupo of grupos\" #grupos>\n      <div *ngIf=\"grupo.required;\" class=\"instruction\">\n        <span style=\"padding: 0px 20px;\">*{{grupo.nome}}:</span>\n        <mat-radio-group (changeRadio)=\"onChange($event)\" [name]=\"grupo.nome\" [required]=\"true\">\n            <mat-radio-button  *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}</mat-radio-button>\n        </mat-radio-group>\n      </div>\n      <div *ngIf=\"!grupo.required;\" class=\"instruction\">\n        <span style=\"padding: 0px 20px;\">{{grupo.nome}}:</span>\n        <mat-checkbox (changeRadio)=\"onChange($event)\"  *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-checkbox>\n      </div>\n    </ng-template>\n    <div *ngIf=\"produto.grupos.length > 0\">\n      <ng-container *ngFor=\"let grupo of produto.grupos\">\n      <div class=\"instruction\">\n        <div *ngIf=\"grupo.force_min > 0 && grupo.nome != 'Extras'; else checkExtraProduto\">\n          <span style=\"padding: 0px 20px;\">*{{grupo.nome}}</span>\n          <div>\n            <mat-radio-group (change)=\"onChange($event)\" [name]=\"grupo.nome\">\n                <mat-radio-button  *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-radio-button>\n            </mat-radio-group>\n          </div>\n        </div>\n        <ng-template #checkExtraProduto>\n          <span style=\"padding: 0px 20px;\">{{grupo.nome}}</span>\n          <div>\n            <mat-checkbox (change)=\"onChangeCheckBox($event)\" *ngFor=\"let opcao of grupo.opcoes\" [name]=\"opcao.nome\" style=\"padding: 0px 20px;\" [checked]=\"false\" [value]=\"opcao\">{{opcao.nome}}<mat-label>(+{{opcao.preco}}€)</mat-label></mat-checkbox>\n          </div>\n        </ng-template>\n      </div>\n    </ng-container>\n    </div>\n    <div class=\"instruction\">\n      <h3 style=\"padding: 0px 20px;\">Instruções extra</h3>\n    </div>\n    <div style=\"margin-top: 20px; padding: 0px 20px;\">\n      <mat-form-field class=\"full-width\">\n        <textarea matInput placeholder=\"Deixe informaçoes para o entregador/restaurante\"></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"model-footer flex-item-center\">\n    <div class=\"flex-item-center\">\n      <button mat-mini-fab style=\"margin-right: 10px;\" color=\"default\" [disabled]=\"itemCount < 2\" (click)=\"remove()\">\n        <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\">remove</mat-icon>\n      </button>\n      <span>{{itemCount}}</span>\n      <button mat-mini-fab style=\"margin-left: 10px;\" color=\"default\" (click)=\"add()\">\n        <mat-icon fontSet=\"material-icons-outlined\" mat-icon-button class=\"icon\">add</mat-icon>\n      </button>\n    </div>\n    <div class=\"small-gap\"></div>\n    <button mat-raised-button class=\"full-width full-height success-background\" (click)=\"addToCart()\"\n      [mat-dialog-close]=\"produto\" cdkFocusInitial id=\"addCartButton\" [disabled]=\"isDisabled\">\n      <div>\n        Adicionar {{itemCount}} ao pedido\n        <span style=\"float: right;\">{{(itemCount * produto.preco + itemCount * extra.preco + optionPrice + extraPrice).toFixed(2)}} €</span>\n      </div>\n    </button>\n  </div>\n</div>","<div class=\"home-container\">\n    <ng-container *ngIf=\"restaurantes.length < 1\">\n        <div class=\"card-container\">\n            <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n                flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loaderRestaurant\">\n                <!-- Card with Avatar -->\n                <div class=\"skltn-card\">\n                    <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                    <div class=\"skltn-card__body\">\n                        <div skltn-bone class=\"skltn-card__title\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                    </div>\n                </div>\n            </skltn-root>\n        </div>\n    </ng-container>\n    <ng-container *ngFor=\"let tag of tags\">\n        <div style=\"margin: 20px 0px 0px 10px;\">\n            <span style=\"font-size: 26px; font-weight: 600;\">{{tag}}</span>\n        </div>\n        <div class=\"card-container\">\n            <ng-container *ngFor=\"let restaurante of restaurantes\">\n                <div  class=\"card\" *ngIf=\"hasTag(restaurante, tag)\" (click)=\"goToRestaurant(restaurante.id)\">\n                    <div class=\"img-box\">\n                        <img src=\"../{{restaurante.logo}}\"  class=\"img-box\" data-selected=\"true\" data-label-id=\"0\">\n                    </div>\n                    <div class=\"details-box\">\n                        <div>\n                            <span style=\"font-weight: 600;\">{{restaurante.nome}}</span>\n                        </div>\n                        <div style=\"margin-top: 5px;\">\n                            <label>€</label>\n                            &bull;\n                            <label *ngFor=\"let type of restaurante.tags; let i = index\">{{type}}<span\n                                    style=\"margin: 0px 5px;\"\n                                    *ngIf=\"i < restaurante.tags.length - 1\">&bull;</span></label>\n                        </div>\n                        <div style=\"margin-top: 5px;\">\n                            <mat-chip-list>\n                                <mat-chip>{{restaurante.timing}}</mat-chip>\n                                <mat-chip>\n                                    {{restaurante.stars}} <img\n                                        src=\"\">\n                                    {{restaurante.totalReviews}}\n                                </mat-chip>\n                            </mat-chip-list>\n                        </div>\n                    </div>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { Router } from '@angular/router';\nimport { Restaurant } from '../definitions/Restaurant';\nimport { WriteService } from '../services/write.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  restaurantes:Restaurant[] = new Array();\n  loaderRestaurant = new Array(3);\n  tags = new Array();\n  constructor(private restaurantService: RestaurantService, private router: Router, private writeService: WriteService) { }\n \n\n  ngOnInit() {\n    this.restaurantService.getRestaurants().subscribe(res=>{\n      this.restaurantes = res.reverse();\n      this.tags = [...new Set([].concat(...this.restaurantes.map((rest)=>{\n        return rest.tags.map(tag=>{\n          return tag.trim()\n        })\n      })))];\n      this.restaurantService.setTags(this.tags);\n    });\n  }\n\n  goToRestaurant(id:number){\n    this.writeService.selectRestaurant(this.restaurantes.find(restaurant => restaurant.id === id));\n    this.router.navigate(['restaurants/',id]);\n  }\n\n  hasTag(restaurante: any, tag: string): boolean{\n    for(let i = 0; i < restaurante.tags.length; i++){\n      if(restaurante.tags[i].trim() == tag){\n        return true\n      }\n    }\n    return false;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// ANGULAR\nimport { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\n// OBSERVABLES\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/internal/operators';\n\n@Injectable()\nexport class DelayInterceptor implements HttpInterceptor {\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        console.log(request);\n        return next.handle(request).pipe(delay(500));\n    }\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { AccountToken } from '../definitions/Account';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private HttpClient:HttpClient) { }\n\n  logIn(user):Observable<AccountToken> {\n    let token = localStorage.getItem(\"TOKEN\");\n    console.log(user);\n    \n    return this.HttpClient.post<any>(`http://localhost:3000/login`, user, {headers:{'x-access-token': token ? token : ``}});\n  }\n\n  validateToken(token:string): Observable<AccountToken>{\n    return this.HttpClient.post<any>(`http://localhost:3000/login`, {}, {headers:{'x-access-token': token ? token : ``}});\n  }\n\n  signIn(userInfo): Observable<any>{\n    return this.HttpClient.post<any>(`http://localhost:3000/signin`, userInfo);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-payments',\n  templateUrl: './payments.component.html',\n  styleUrls: ['./payments.component.scss']\n})\nexport class PaymentsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<h1 style=\"margin-bottom: 20px;\">Métodos de Pagamento</h1>\n<img class=\"_2tuBw _12_oN\" width=\"140\" height=\"80\" alt=\"\"\n    src=\"https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_140,h_80/image-pay-by-cash_av6bcw\">\n<div style=\"margin-top: 30px;display: flex; flex-direction: column;\">\n    <h3>Pagar à entrega</h3>\n    <span style=\"margin-top: 10px; font-weight: 500; opacity: .5;\">Para já só é aceite o pagamento a quando a entrega.</span>\n  \n</div>","<div class=\"single-restaurant-container\">\n    <div class=\"restaurant-header-box\" [style]='background'>\n        <div class=\"details-box\">\n            <div class=\"contain\">\n                <h1 style=\"font-weight: 600;\">{{restaurant.nome}}</h1>\n                <div style=\"margin-top: 15px;\">\n                    <label>€</label>\n                    <div *ngFor='let tag of restaurant.tags'>\n                        <label><span style=\"margin: 0px 5px;\">&bull;</span>{{tag.trim()}}</label>\n                    </div>\n                </div>\n                <div class=\"restaurant-info\">\n                    <mat-chip-list>\n                        <mat-chip>{{restaurant.timing}}</mat-chip>\n                        <mat-chip>\n                            {{restaurant.rating}}\n                            <img src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/972e1cb487b3a5c72c30a6635596f477.svg\">\n                            {{restaurant.totalReviews}}\n                        </mat-chip>\n                    </mat-chip-list>\n                </div>\n                <div style=\"margin-top: 15px;\">\n                    <label>{{morada}}</label>\n                </div>\n            </div>\n        </div>\n        <div class=\"img-box\">\n            <img src=\"../{{restaurant.logo}}\" width=\"100%\" height=\"380px\" />\n        </div>\n    </div>\n    <div class=\"menu-header\">\n        <nav mat-tab-nav-bar mat-align-tabs=\"center\" class=\"tab-group\">\n            <a mat-tab-link\n               *ngFor=\"let item of categorias\"\n               [routerLink]=\"item.nome\"\n               [state]=\"[item.produtos, item.foto, item.grupos]\"\n               routerLinkActive #rla=\"routerLinkActive\"\n               [active]=\"rla.isActive\"\n               >\n              {{item.nome}}\n            </a>\n        </nav>\n    </div>\n    <div class=\"menu-body\">\n        <router-outlet></router-outlet>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { RestaurantService } from '../services/restaurant.service';\nimport { ActivatedRoute, Router } from \"@angular/router\";\nimport { Restaurant } from '../definitions/Restaurant';\nimport { ReadService } from '../services/read.service';\n\n@Component({\n  selector: 'app-single-restaurant',\n  templateUrl: './single-restaurant.component.html',\n  styleUrls: ['./single-restaurant.component.scss']\n})\nexport class SingleRestaurantComponent implements OnInit {\n\n  categorias: any;\n  cart = Array();\n  loader = Array(8);\n  restaurant:Restaurant;\n  background:string;\n  morada:string;\n  restId:number;\n\n  constructor(\n    public dialog: MatDialog,\n    private restaurantService: RestaurantService,\n    private readService: ReadService,\n    private activatedRoute: ActivatedRoute,\n    private router: Router\n  ) {\n    this.activatedRoute.params.subscribe(val=>{\n      this.restId = val.id;\n    });\n  }\n\n  ngOnInit() {\n    this.readService.getSelectedRestaurant().subscribe(data=>{\n      this.restaurant = data;\n\n      if(Object.keys(data).length === 0){\n        this.restaurantService.getRestaurant(this.restId).subscribe(restaurant=>{\n          this.restaurant = restaurant;\n          this.morada =`${this.restaurant.morada.rua}`; \n          this.background = `background:url(${this.restaurant.cdn}${this.restaurant.desktop_widget});   \n          background-size: 100%;\n          background-repeat: no-repeat;`;\n        });\n      }else{\n        this.morada =`${this.restaurant.morada.rua}`; \n        this.background = `background:url(${this.restaurant.cdn}${this.restaurant.desktop_widget});   \n        background-size: 100%;\n        background-repeat: no-repeat;`;\n      }\n    });\n\n    this.restaurantService.getMeals(this.restId).subscribe(data=>{\n      this.categorias = data;\n      console.log(data);\n      if(this.categorias[0].grupos.length > 0){\n        localStorage.setItem(\"Grupos\", JSON.stringify(this.categorias[0].grupos));\n      }\n      \n      localStorage.setItem(\"foto\", this.categorias[0].foto);\n      localStorage.setItem(\"Categoria\", JSON.stringify(this.categorias[0].produtos));\n      this.router.navigate([this.categorias[0].nome], {relativeTo: this.activatedRoute});\n    });\n  }\n}","<h1>Pedidos Anteriores</h1>\n<ng-container *ngIf=\"orders.length < 1\">\n        <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n            flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loader\">\n            <!-- Card with Avatar -->\n            <div class=\"skltn-card\">\n                <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                <div class=\"skltn-card__body\">\n                    <div skltn-bone class=\"skltn-card__title\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                </div>\n            </div>\n        </skltn-root>\n</ng-container>\n<div class=\"order-box\" *ngFor=\"let order of orders\">\n    <div class=\"img-box\">\n        <img [src]=\"order.image\" width=\"250\" height=\"120\">\n    </div>\n    <div class=\"detail-box\">\n        <div style=\"margin-bottom: 5px;\"><span style=\"font-size: 18px; font-weight: 600;\">{{order.name}}</span></div>\n        <label>{{order.meals.length}} items for ₹ {{order.totalPrice}} • {{order.time}}</label>\n        <ul style=\"margin-top: 15px;\">\n            <li style=\"margin-bottom: 10px;\" class=\"flex-item-center\" *ngFor=\"let meal of order.meals\">\n                <div class=\"border-box\">{{meal.quantity}}</div>\n                <div class=\"very-small-gap\"></div>\n                <span>{{meal.name}}</span>\n            </li>\n\n        </ul>\n    </div>\n    <div style=\"flex: 1; margin-left: 40px;\">\n        <button mat-raised-button class=\"full-width full-height success-background \" style=\"height: 45px;\">\n            Reorder\n        </button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { OrdersService } from 'src/app/services/orders.service';\n\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.scss']\n})\nexport class OrdersComponent implements OnInit {\n  loader = new Array(2);\n  orders = new Array();\n  constructor(private orderService: OrdersService) { }\n\n  ngOnInit() {\n    this.orderService.getAllOrders().subscribe(res=>{\n      this.orders = res;\n    });\n  }\n\n}\n","import { Action } from '@ngrx/store';\nimport { AccountToken } from '../definitions/Account';\n\nexport const ADD_ACCOUNT = `[ACCOUNT] Add`;\n\n\nexport const STORAGE_KEYS = {\n  account: `ACCOUNT`,\n  token: `TOKEN` \n}\nexport class AddAccount implements Action {\n\n  readonly type = ADD_ACCOUNT;\n\n  constructor(public payload: AccountToken){\n  }\n}\n\n\n\nexport type Actions = AddAccount ;","<div class=\"cart-container\">\n    <div class=\"cart-container-box\">\n        <div class=\"left-container-box\">\n            <div class=\"child-box\" *ngIf=\"conta == null\">\n                <div>\n                    <h2>Conta</h2>\n                    <span>Para efetuar o seu pedido, faça Login na sua conta ou registe-se já!</span>\n                </div>\n                <div class=\"button-container\">\n                    <div class=\"button-box\">\n                        <button mat-raised-button class=\"default-button success-background\" style=\"width: 150px;\"\n                        [routerLink]=\"['/login']\">\n                            LOG IN\n                        </button>\n                    </div>\n                    <div class=\"button-box\" style=\"margin-left: 20px;\">\n                        <button mat-raised-button class=\"default-button success-outline\" style=\"width: 150px;\"\n                        [routerLink]=\"['/signup']\" >\n                            Registrar\n                        </button>\n                    </div>\n                </div>\n            </div>\n            <div *ngIf=\"conta != null\" class=\"child-box\">\n                <div>\n                    <h2>Endereço de entrega</h2>\n                    <span *ngIf=\"conta.moradas?.length > 1\">\n                        Escolha onde quer ser entregue\n                    </span>\n                </div>\n                <div  class=\"address-box-container\">\n                    <app-addresses (conta)=\"conta\" (fullComponent)=\"false\"></app-addresses>\n                </div>\n            </div>\n            <div class=\"child-box\">\n                <div>\n                    <h2>Método de pagamento</h2>\n\n                </div>\n                <div class=\"second-view\">\n                    <div class=\"body\" style=\"padding: 0;\">\n                        <div class=\"list-view\">\n                            <div class=\"list-box\">\n                                <ul>\n                                    <li class=\"item\">\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            account_balance_wallet\n                                        </mat-icon>\n                                        <span class=\"text\" style=\"margin-left: 10px;\">Wallets</span>\n                                    </li>\n                                    <li class=\"item \">\n\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            credit_card\n                                        </mat-icon>\n                                        <span style=\"margin-left: 10px;\" class=\"text\">\n                                            Credit/Debit Cards\n                                        </span>\n                                    </li>\n                                    <li class=\"item active_item\">\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            money\n                                        </mat-icon>\n                                        <span class=\"text\" style=\"margin-left: 10px;\">Pagar á entrega</span>\n                                    </li>\n                                    <li class=\"item\">\n                                        <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                            credit_card\n                                        </mat-icon>\n                                        <span class=\"text\" style=\"margin-left: 10px;\">UPI</span>\n                                    </li>\n\n\n                                </ul>\n                            </div>\n                        </div>\n                        <div class=\"result-view\">\n                            <div class=\"result-box\">\n                                <img class=\"_2tuBw _12_oN\" width=\"140\" height=\"80\" alt=\"\"\n                                    src=\"https://res.cloudinary.com/swiggy/image/upload/fl_lossy,f_auto,q_auto,w_140,h_80/image-pay-by-cash_av6bcw\">\n                                <div style=\"margin-top: 30px;display: flex; flex-direction: column;\">\n                                    <h3 style=\"font-weight: 400\">Pagar á entrega</h3>\n                                    <span style=\"margin-top: 10px; font-weight: 500; opacity: .5;\">Os nossos entregadores nao dispõem de troco, tente ter o valor exato</span>\n                                    <div class=\"button-box full-size-button-box\">\n                                        <button mat-raised-button class=\"default-button success-background\"\n                                            style=\"margin-top: 20px;\">\n                                            <span>€</span>\n                                        </button>\n                                    </div>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"right-container-box\">\n\n\n\n            <div class=\"main-box cart-card\" style=\"padding: 0;\">\n                <div class=\"cart-card-header flex-with-space-between padding-horizontaly\">\n                    <div class=\"flex-item-center\">\n                        <mat-icon fontSet=\"material-icons-outlined\">shopping_cart</mat-icon>\n                        <div class=\"very-small-gap\"></div>\n                        <h2>O Seu pedido ({{cart.orders.length}})</h2>\n                    </div>\n                </div>\n                <div class=\"cart-card-body\">\n                    <ul>\n                        <li class=\"flex-with-space-between padding\" *ngFor=\"let item of cart.orders\">\n                            <div class=\"flex-item-center\">\n                                <mat-form-field style=\"width: 30px; background: transparent\" color=\"dark\">\n                                    <mat-select style=\"text-align: center !important;\" [ngModel]=\"item.quantidade\"\n                                        (selectionChange)=\"addToCart($event, item)\">\n                                        <mat-option *ngFor=\"let quantityValue of quantityList\" [value]=\"quantityValue\"\n                                            style=\"margin-left: 5px !important;\">\n                                            {{quantityValue}}\n                                        </mat-option>\n                                    </mat-select>\n                                </mat-form-field>\n                                <div class=\"small-gap\"></div>\n                                <div class=\"flex-column\">\n                                    <span>{{item.nome}}</span>\n                                    <div class=\"flex-column label-small\" *ngIf=\"item.extras[0]\">\n                                        <mat-label>{{item.extras[0]}}<mat-label *ngIf=\"item.extras[3].length > 0\"> + {{item.extras[3].length}} complemento(s)</mat-label></mat-label>\n                                    </div>\n                                    <a style=\"margin-top: 5px;\" class=\"accent\" (click)=\"removeFromCart(item)\">Retirar </a>\n                                </div>\n                               \n                            </div>\n                            <span>{{calcularItem(item).toFixed(2)}} €</span>\n                        </li>\n                    </ul>\n                </div>\n                <div class=\"cart-card-footer padding\">\n                    <button mat-raised-button\n                        class=\"full-width full-height success-background \">\n                        <div class=\"flex-with-space-between\">\n                            <span>\n                                Pagar\n                            </span>\n                            <span>\n                                {{calculateTotalPriceOfCart()}} €\n                            </span>\n                        </div>\n                    </button>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CartService } from '../services/cart.service';\nimport { ReadService } from '../services/read.service';\nimport { Account } from '../definitions/Account';\nimport { Cart } from '../definitions/Cart';\nimport { WriteService } from '../services/write.service';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.scss']\n})\nexport class CheckoutComponent implements OnInit {\n  quantityList = [1,2,3,4,5,6,7,8,9,10];\n  conta: Account = null;\n  cart: Cart;\n  constructor(private router: Router, \n    private writeService: WriteService,\n    private readService: ReadService) {\n\n\n  }\n\n  ngOnInit() {\n    this.readService.getAccount().subscribe(data=>{\n      if(data.access){\n        this.conta = data.account;\n      }\n    });\n    this.readService.getCart().subscribe(data=>{\n      this.cart = data;\n    })\n  }\n\n  addToCart(event, item): void {\n    let newItem = Object.assign({}, item);\n    newItem.quantidade = event.value;\n    this.writeService.updateItem(newItem);\n  }\n\n  removeFromCart(item){\n    let newItem = Object.assign({},item);\n    newItem.quantidade = 0;\n    this.writeService.updateItem(newItem);\n  }\n\n  calculateTotalPriceOfCart () : number{\n    let total = 0;\n    \n    this.cart.orders.forEach(element => {\n      total += (element.preco + element.extras[1] * element.quantidade);\n      if(element.extras[3].length > 0){\n        element.extras[3].forEach(extra=>{\n          total += extra.preco;\n        });\n      }\n    });\n    \n    return total;\n  }\n\n  \n  calcularItem(item):number{\n    let total = (item.preco + item.extras[1]) * item.quantidade;\n\n    if(item.extras[3].length > 0){\n      item.extras[3].forEach(extra=>{\n        total += extra.preco;\n      });\n    }\n\n    return total;\n  }\n\n  openLoginSideNav(){\n   // this.helperService.loginSideNav.next(true);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n\n  api = \"http://localhost:3000\";\n\n  constructor(private httpClient: HttpClient) { }\n  getAllOrders(): Observable<any>{\n   return this.httpClient.get(this.api+\"/orders\");\n  }\n}\n","<h1>Favoritos</h1>\n\n<ng-container *ngIf=\"restaurants.length < 1\">\n    <div class=\"card-container\">\n        <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n            flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loader\">\n            <!-- Card with Avatar -->\n            <div class=\"skltn-card\">\n                <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                <div class=\"skltn-card__body\">\n                    <div skltn-bone class=\"skltn-card__title\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                    <div skltn-bone class=\"skltn-card__line\"></div>\n                </div>\n            </div>\n        </skltn-root>\n    </div>\n</ng-container>\n<div class=\"card-container\" *ngIf=\"restaurants.length > 0\">\n    <div class=\"card\" *ngFor=\"let restaurant of restaurants[0].list\">\n        <div class=\"img-box\">\n            <img [src]=\"restaurant.image\" width=\"350px\" height=\"240px\" data-selected=\"true\" data-label-id=\"0\">\n        </div>\n        <div class=\"details-box\">\n            <div>\n                <span style=\"font-weight: 600;\">{{restaurant.name}} <span *ngIf=\"restaurant.area\">-\n                        {{restaurant.area}} </span></span>\n            </div>\n            <div style=\"margin-top: 5px;\">\n                <label>₹₹</label>\n                &bull;\n                <label *ngFor=\"let type of restaurant.foodType; let i = index\">{{type}}<span\n                        *ngIf=\"i < restaurant.foodType.length-1\" style=\"margin: 0px 5px;\">&bull;</span></label>\n            </div>\n            <div style=\"margin-top: 5px;\">\n                <mat-chip-list aria-label=\"Fish selection\">\n                    <mat-chip>{{restaurant.timing}}</mat-chip>\n                    <mat-chip>\n                        {{restaurant.ratingPoints}} <img\n                            src=\"https://d3i4yxtzktqr9n.cloudfront.net/web-eats-v2/972e1cb487b3a5c72c30a6635596f477.svg\">\n                        (500+)\n                    </mat-chip>\n                </mat-chip-list>\n            </div>\n\n        </div>\n    </div> \n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestaurantService } from 'src/app/services/restaurant.service';\n\n@Component({\n  selector: 'app-favourites',\n  templateUrl: './favourites.component.html',\n  styleUrls: ['./favourites.component.scss']\n})\nexport class FavouritesComponent implements OnInit {\n  loader = new Array(2);\n  restaurants = new Array();\n  loaderRestaurant = new Array(8);\n  constructor(private router: Router, private restaurantService: RestaurantService) {}\n  ngOnInit() {\n    this.restaurantService.getRestaurants().subscribe(res=>{\n      this.restaurants = res;\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Store } from '@ngrx/store';\nimport { AppState } from '../app.state';\nimport * as AccountActions from '../actions/account.action';\nimport * as RestaurantActions from '../actions/restaurant.action';\nimport * as  CartActions  from '../actions/cart.actions';\nimport { AccountToken } from '../definitions/Account';\nimport { Restaurant } from '../definitions/Restaurant';\nimport { Cart } from '../definitions/Cart';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WriteService {\n\n  constructor(private store: Store<AppState>) { }\n\n  addAccount(account: AccountToken){\n    this.store.dispatch(new AccountActions.AddAccount(account));\n  }\n\n  selectRestaurant(restaurant: Restaurant){\n    this.store.dispatch(new RestaurantActions.SelectRestaurant(restaurant))\n  }\n\n  saveCart(cart: Cart){\n    this.store.dispatch( new CartActions.SaveCart(cart));\n  }\n\n  addItem(cart:Cart, item){\n    this.store.dispatch( new CartActions.AddOrder(cart, item));\n  }\n  \n  updateItem(newItem){\n    this.store.dispatch( new CartActions.UpdateOrder(newItem));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AppState } from '../app.state';\nimport { Store } from '@ngrx/store';\nimport { AccountToken } from '../definitions/Account';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReadService {\n\n  constructor(private store: Store<AppState>) {}\n\n  getAccount(){\n    return this.store.select('account');\n  }\n\n  getSelectedRestaurant(){\n    return this.store.select('selectedRestaurant');\n  }\n\n  extractToken(data: AccountToken){\n    return data.account.token ? data.account.token : ``;\n  }\n\n  getCart(){\n    return this.store.select('cart');\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Pede Agora';\n}\n","<app-header></app-header>\n<div class=\"main\">\n    <router-outlet></router-outlet>\n</div>\n<app-footer></app-footer>","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n\n  api = \"http://localhost:3000\";\n  tags: Array<string>;\n\n  constructor(private httpClient: HttpClient) { }\n  getRestaurants(): Observable<any>{\n   return this.httpClient.get(this.api+\"/restaurantes\");\n  }\n  \n  getRestaurant(id:number): Observable<any>{\n    return this.httpClient.get(this.api+\"/restaurantes/\"+id);\n  }\n\n  getMeals(id:number): Observable<any> {\n    return this.httpClient.get(this.api+\"/restaurantes/\"+id+\"/meals/\");\n  }\n\n  setTags(tags:Array<string>){\n    this.tags = tags;\n  }\n\n  getTags(): Array<string>{\n    return this.tags;\n  }\n\n  getRecommendsItems(): Observable<any> {\n    return this.httpClient.get(this.api+\"/meals\");\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n  MatBadgeModule,\n} from '@angular/material';\nimport { NgxSkltnModule, SkltnConfig } from 'ngx-skltn';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MdePopoverModule } from '@material-extended/mde';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { FooterComponent } from './shared/footer/footer.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './shared/login/login.component';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { SingleRestaurantComponent } from './single-restaurant/single-restaurant.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMaterialTimepickerModule} from 'ngx-material-timepicker';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { SheduledDeliverModelComponent } from './shared/sheduled-deliver-model/sheduled-deliver-model.component';\nimport { FavouritesComponent } from './account/favourites/favourites.component';\nimport { OrdersComponent } from './account/orders/orders.component';\nimport { MyAccountComponent } from './account/my-account/my-account.component';\nimport { PaymentsComponent } from './account/payments/payments.component';\nimport { AddressesComponent } from './account/addresses/addresses.component';\nimport { NgxPageScrollCoreModule } from 'ngx-page-scroll-core';\nimport { NgxPageScrollModule } from 'ngx-page-scroll';\nimport { AddItemModelComponent } from './single-restaurant/add-item-model/add-item-model.component';\nimport { DelayInterceptor } from './services/delay-interceptor.service';\nimport { StoreModule } from '@ngrx/store';\nimport { reducerAccount } from './reducers/account.reducer';\nimport { reducerSelectedRestaurant } from './reducers/selectedRestaurant.reducer';\nimport { MealComponent } from './single-restaurant/meal/meal.component';\nimport { reducerCart } from './reducers/cart.reducer';\nimport { ChangeInfoComponentComponent } from './account/change-info-component/change-info-component.component';\nimport { NewAddressComponent } from './account/addresses/new-address/new-address.component';\n\nconst skltnConfig: SkltnConfig = {\n  rectRadius: 10,\n  flareWidth: '150px',\n  bgFill: '#d8d5d1',\n  flareFill: 'rgba(255,255,255, 0.5)',  \n};\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    SingleRestaurantComponent,\n    CheckoutComponent,\n    SheduledDeliverModelComponent,\n    FavouritesComponent,\n    OrdersComponent,\n    MyAccountComponent,\n    PaymentsComponent,\n    AddressesComponent,\n    AddItemModelComponent,\n    MealComponent,\n    ChangeInfoComponentComponent,\n    NewAddressComponent\n  ],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({\n      account: reducerAccount,\n      selectedRestaurant: reducerSelectedRestaurant,\n      cart: reducerCart\n    }),\n    //material\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    MatBadgeModule,\n    //-----end material\n    MdePopoverModule,\n    NgxSkltnModule.forRoot(skltnConfig),\n    ReactiveFormsModule,\n    NgxMaterialTimepickerModule,\n    HttpClientModule,\n    NgxPageScrollCoreModule.forRoot({duration: 1500}),\n    NgxPageScrollModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: DelayInterceptor, multi: true },\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [SheduledDeliverModelComponent, AddItemModelComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { UserLogin } from '../../definitions/User'\nimport { Router } from '@angular/router';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../../services/login.service';\nimport { WriteService } from '../../services/write.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginFormgroup: FormGroup;\n  user: UserLogin;\n  constructor(private loginService:LoginService, \n    private router: Router, \n    private accountState: WriteService) { }\n\n  ngOnInit() {\n    this.loginFormgroup = new FormGroup({\n      username: new FormControl('',Validators.required),\n      password: new FormControl('',Validators.required)\n    }, Validators.required);\n  }\n\n  login(){\n    if(this.loginFormgroup.valid){\n      this.user = {\n        name: this.loginFormgroup.controls.username.value,\n        account:{\n          password:this.loginFormgroup.controls.password.value\n        }\n      } \n\n      this.loginService.logIn(this.user).subscribe(data=>{\n        \n        if(data.access){\n          this.accountState.addAccount(data);\n\n          this.router.navigate([\"/home\"]);\n        }else{\n          Swal.fire('Login', 'Utilizador/password invalido', 'error');\n        }\n      })\n    }\n  }\n\n}\n","<div class=\"login-container\">\n    <div>\n        <div style=\"width: 100%; text-align: center; margin-bottom: 30px;\">\n            <img src=\"../../../assets/logo_orig.png\" class=\"fadeIn\">\n        </div>\n        <h1 style=\"margin: 40px 0px; width: 100%;\">Bem Vindo</h1>\n        <span>Entre com o seu numero de télemovel ou endereço e-mail</span>\n        <form class=\"login-input-box\" [formGroup]=\"loginFormgroup\" (ngSubmit)=\"login()\">\n            <mat-form-field appearance=\"outline\" class=\"input-box full-width\" style=\"margin-top: 10px;\">\n                <mat-label>Numero de Télemovel</mat-label>\n                <input matInput placeholder=\"Numero de Télemovel\" class=\"input-text\" formControlName=\"username\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\" class=\"input-box full-width\" style=\"margin-top: 10px;\">\n                <mat-label>Password</mat-label>\n                <input type=\"password\" matInput placeholder=\"Password\" class=\"input-text\" formControlName=\"password\">\n            </mat-form-field>\n        </form>\n        <button mat-raised-button class=\"full-width full-height accent-background\" style=\"height: 45px;\" (click)= \"login()\">\n            Login\n        </button>\n        <div style=\"text-align: center; margin-top: 15px;\">\n            <span>Novo na Pede agora? </span> <span><a [routerLink]=\"['/signup']\" routerLinkActive=\"active\">Criar uma conta</a></span>\n        </div>\n    </div>\n</div>","import { Component, OnDestroy } from '@angular/core';\nimport { AddItemModelComponent } from '../add-item-model/add-item-model.component';\nimport { MatDialog } from '@angular/material';\nimport { NavigationStart, Router, Event, ActivationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-meal',\n  templateUrl: './meal.component.html',\n  styleUrls: ['./meal.component.scss']\n})\nexport class MealComponent implements OnDestroy {\n\n  loader = Array(5);\n  produtos:any = null;\n  navSubscription: Subscription;\n  catfoto:string;\n  grupos: Array<any>;\n\n  constructor(private router:Router, public dialog: MatDialog) { \n   this.navSubscription = this.router.events.subscribe((event:Event)=>{\n     if(event instanceof NavigationStart || event instanceof ActivationEnd){\n      this.produtos = this.router.getCurrentNavigation().extras.state ? this.router.getCurrentNavigation().extras.state[0] : undefined;\n      this.catfoto = this.router.getCurrentNavigation().extras.state? this.router.getCurrentNavigation().extras.state[1] : undefined;\n      this.grupos = this.router.getCurrentNavigation().extras.state? this.router.getCurrentNavigation().extras.state[2] : undefined;\n\n       if(!this.produtos){\n         this.produtos = JSON.parse(localStorage.getItem(\"Categoria\"));\n         this.catfoto = localStorage.getItem(\"foto\");\n         this.grupos = JSON.parse(localStorage.getItem('Grupos'));\n       }\n      \n     }\n   })\n  }\n\n  getFoto(){\n    return this.catfoto;\n  }\n\n  ngOnDestroy(): void {\n    this.navSubscription.unsubscribe();\n  }\n\n  addItemDialog(meal): void {\n\n    const dialogRef = this.dialog.open(AddItemModelComponent, {\n      width: '1000px',\n      data: [meal, this.grupos]\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // if (result) {\n      //   this.deliveryDate = result.deliveryDate;\n      //   this.deliveryTime = result.deliveryTime;\n      //   this.selectedDeliveryTime.data = result.deliveryDate + ' ' + result.deliveryTime;\n      // } else {\n      //   this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n      // }\n    });\n  }\n}\n","<div class=\"container\">\n    <ng-container *ngIf=\"!produtos\">\n        <div class=\"card-container\">\n            <skltn-root class=\"card\" duration=\"1000\" [rectRadius]=\"10\" flareWidth=\"50%\" bgFill=\"#d8d5d1\"\n                flareFill=\"rgba(255,255,255, 0.5)\" *ngFor=\"let item of loader\">\n                <!-- Card with Avatar -->\n                <div class=\"skltn-card\">\n                    <div skltn-bone class=\"skltn-card__avatar\" type=\"circle\"></div>\n                    <div class=\"skltn-card__body\">\n                        <div skltn-bone class=\"skltn-card__title\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                        <div skltn-bone class=\"skltn-card__line\"></div>\n                    </div>\n                </div>\n            </skltn-root>\n        </div>\n    </ng-container>\n\n    <ng-container>\n        <div class=\"box-wrapper\" *ngFor=\"let item of produtos\" (click)=\"addItemDialog(item)\">\n            <img *ngIf=\"item.foto; else fallback\"[src]=\"item.foto\"/>\n            <ng-template #fallback>\n                <img [src]=\"getFoto()\"/>\n            </ng-template>\n            <div class=\"box-content\">\n                <a class=\"buy\"><span><i class=\"icon\"></i></span></a>\n                <div class=\"title\">{{item.nome}}</div>\n                <div class=\"desc\">{{item.descricao}}</div>\n                <span class=\"price\">{{item.preco}} €</span>\n            </div>\n        </div>\n    </ng-container>\n</div>","import { Injectable } from '@angular/core';\nimport { ReadService } from './read.service';\nimport { Cart } from '../definitions/Cart';\nimport { WriteService } from './write.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n\n  cart: Cart;\n  constructor(private readService: ReadService, private writeService: WriteService) { \n    this.getCart();\n  }\n \n\n  getCart() {\n    this.readService.getCart().subscribe(data=>{\n      this.cart = data;\n    });\n  }\n\n  setTracker(tracker:string){\n    this.cart.tracker = tracker;\n  }\n\n  addToCart(item) {\n   this.writeService.addItem(this.cart, item);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Account, AccountToken } from '../../definitions/Account';\nimport { ReadService } from '../../services/read.service';\nimport { WriteService } from '../../services/write.service';\nimport { ChangeInfoComponentComponent } from '../change-info-component/change-info-component.component';\n\n@Component({\n  selector: 'app-my-account',\n  templateUrl: './my-account.component.html',\n  styleUrls: ['./my-account.component.scss']\n})\nexport class MyAccountComponent implements OnInit {\n\n  currentRoute = \"orders\";\n\n  AccountToken: AccountToken;\n  account: Account;\n  constructor(private router: Router, private matDialog: MatDialog, private readService: ReadService, private writeService: WriteService) { \n    this.readService.getAccount().subscribe(data=>{\n      this.AccountToken = data;\n      console.log(data)\n      if(!this.AccountToken.access){\n        this.router.navigate(['/login']);\n      }\n      this.account = data.account;\n    });\n  }\n\n  changeChildRoute(name){\n    this.currentRoute = name;\n  }\n\n\n  logout(){\n    this.AccountToken = {\n      access:false,\n      account:{} as Account\n    };\n\n    this.writeService.addAccount(this.AccountToken)\n\n    this.router.navigate(['/home']).then(()=>{\n      window.location.reload();\n    });\n  }\n\n\n  editPassword(){\n    const dialogRef = this.matDialog.open(ChangeInfoComponentComponent, {\n      width: '400px',\n      data: this.account\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      // if (result) {\n      //   this.deliveryDate = result.deliveryDate;\n      //   this.deliveryTime = result.deliveryTime;\n      //   this.selectedDeliveryTime.data = result.deliveryDate + ' ' + result.deliveryTime;\n      // } else {\n      //   this.selectedDeliveryTime = this.deliveryTimeSelection[0];\n      // }\n    });\n  }\n\n  ngOnInit() {\n  \n  }\n\n}\n","<div class=\"myaccount-container\">\n    <div class=\"myaccount-container-body second-view\">\n        <div class=\"secondary-container-header\">\n            <div class=\"header-text\">\n                <h1 class=\"primary-text\">{{account.nome}}</h1>\n                <span class=\"secondary-text\">\n                    <span>{{account.telefone}}</span>\n                    <span style=\"margin-left: 20px\">{{account.email}}</span>\n                </span>\n            </div>\n            <div class=\"edit-button-container\">\n                <div class=\"edit-button-box\">\n                    <button mat-raised-button class=\"edit-button-text\" (click)=\"editPassword()\">Modificar Password</button>\n                </div>\n                <div class=\"edit-button-box\">\n                    <button mat-raised-button class=\"edit-button-text\" (click)=\"logout()\">Logout</button>\n                </div>\n            </div>\n        </div>\n        <div class=\"body\">\n            <div class=\"list-view\">\n                <div class=\"list-box\">\n                    <ul>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'orders'}\" (click)=\"changeChildRoute('orders')\" [routerLink]=\"['/my-account/orders']\" routerLinkActive=\"active\">\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        all_out\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Pedidos\n                                </span>\n                            </span>\n                        </li>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'favourites'}\" (click)=\"changeChildRoute('favourites')\"  [routerLink]=\"['/my-account/favourites']\" routerLinkActive=\"active\" disabled>\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        favorite_border\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Favoritos\n                                </span>\n                            </span>\n                        </li>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'payments'} \" (click)=\"changeChildRoute('payments')\"  [routerLink]=\"['/my-account/payments']\" routerLinkActive=\"active\">\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        payment\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Métodos de pagamento\n                                </span>\n                            </span>\n                        </li>\n                        <li class=\"item\" [ngClass]=\"{'active_item': currentRoute == 'addresses'}\" (click)=\"changeChildRoute('addresses')\" [routerLink]=\"['/my-account/addresses']\" routerLinkActive=\"active\">\n                            <span class=\"text flex-item-center\">\n                                <span style=\"transform: translateY(2px);\">\n                                    <mat-icon fontSet=\"material-icons-outlined\" class=\"icon\">\n                                        near_me\n                                    </mat-icon>\n                                </span>\n                                <span style=\"margin-left: 10px;\">\n                                    Moradas\n                                </span>\n                            </span>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            <div class=\"result-view\">\n                <div class=\"result-box\">\n                   <router-outlet></router-outlet>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"footer\">\n        <div class=\"container\">\n            <div class=\"first\">\n                    <img src=\"../assets/logo_orig (1).png\">\n            </div>\n            <div class=\"second\">\n                <h4>Ajuda</h4>\n                <ul class=\"list\" style=\"line-height: 2.5;\">\n                    <li>Informaçoes de entregas</li>\n                    <li>Devoluções e Trocas</li>\n                    <li>Termos e condições</li>\n                    <li>Política de Privacidade</li>\n                </ul>\n            </div>\n            <div class=\"third\">\n                <h4>Tem Perguntas ?</h4>\n                <p>Endereço completamente falso so pra testar</p>\n                <p>+351 123 456 789</p>\n                <p>geral@pedeagora.com</p>\n            </div>\n        </div>\n        <div class=\"copyright\">\n            <p>Coisas sobre copyright vao pra aqui</p>\n        </div>\n    </div>","import { AccountToken, Account } from '../definitions/Account';\r\nimport * as AccountActions from '../actions/account.action';\r\n\r\n\r\nconst initialState:AccountToken = {\r\n    access: false,\r\n    account:{} as Account\r\n}\r\n\r\nexport function reducerAccount(state: AccountToken = initialState, action: AccountActions.Actions) {\r\n    switch(action.type){\r\n        case AccountActions.ADD_ACCOUNT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Action } from '@ngrx/store';\r\nimport { Cart } from '../definitions/Cart';\r\n\r\nexport const REMOVE_CART = `[CART] Remove`;\r\nexport const SAVE_CART = `[CART] Save`;\r\nexport const ADD_ORDER = `[CART] Add`;\r\nexport const UPDATE_ORDER = `[CART] Update`;\r\n\r\nexport const STORAGE_KEYS = {\r\n  cart: `CART`\r\n}\r\n\r\nexport class SaveCart implements Action {\r\n    readonly type = SAVE_CART;\r\n\r\n    constructor(public payload: Cart){}\r\n}\r\n\r\nexport class AddOrder implements Action {\r\n    readonly type = ADD_ORDER;\r\n  \r\n    constructor(public cart: Cart, public order){\r\n    }\r\n}\r\n\r\nexport class DeleteCart implements Action {\r\n    readonly type = REMOVE_CART;\r\n  \r\n    constructor(){\r\n    }\r\n}\r\n\r\nexport class UpdateOrder implements Action {\r\n    readonly type = UPDATE_ORDER;\r\n\r\n    constructor(public newItem) {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport type Actions = SaveCart | AddOrder | DeleteCart | UpdateOrder;","import * as RestaurantActions from '../actions/restaurant.action';\r\nimport { Restaurant } from '../definitions/Restaurant';\r\n\r\n\r\nconst initialState:Restaurant = {} as Restaurant;\r\n\r\nexport function reducerSelectedRestaurant(state: Restaurant = initialState, action: RestaurantActions.Actions) {\r\n    switch(action.type){\r\n        case RestaurantActions.SELECT_RESTAURANT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Account } from '../../definitions/Account';\nimport { ReadService } from '../../services/read.service';\nimport { NewAddressComponent } from './new-address/new-address.component';\n@Component({\n  selector: 'app-addresses',\n  templateUrl: './addresses.component.html',\n  styleUrls: ['./addresses.component.scss']\n})\nexport class AddressesComponent implements OnInit {\n  \n  public conta:Account;\n  fullComponent:boolean = true;\n\n  constructor(private readService:ReadService, private matDialog: MatDialog) { }\n\n  ngOnInit() {\n    this.readService.getAccount().subscribe(data=>{\n      this.conta = data.account;\n    });\n  }\n\n  createNewAddress(){\n    const dialogRef = this.matDialog.open(NewAddressComponent, {\n      width: '1000px'\n    });\n\n  }\n}\n","<div *ngIf=\"fullComponent\">\n    <h1>Gerir Moradas</h1>\n</div>\n<div class=\"address-box-container\">\n    <div *ngFor=\"let morada of conta.moradas\" class=\"address-box-card\">\n        <div class=\"address-box-header\">\n            <mat-icon fontSet=\"material-icons-outlined\">{{morada.type}}</mat-icon>\n            <h3 style=\" margin-left: 10px\">{{morada.name}}</h3>\n        </div>\n        <div class=\"address-box-footer\">\n            <span>{{morada.rua}}</span>\n            <div>{{morada.codigoPostal}} - {{morada.cidade}}</div>\n        </div>\n    </div>\n    <button mat-button>\n        <mat-icon class=\"material-icons\">add</mat-icon>\n    </button>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-change-info-component',\n  templateUrl: './change-info-component.component.html',\n  styleUrls: ['./change-info-component.component.scss']\n})\nexport class ChangeInfoComponentComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<ChangeInfoComponentComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n}\n","<div class=\"password-change-container\">\n    <div class=\"model-header\">\n        <h4>Modificar Password</h4>\n    </div>\n    <div class=\"model-body\">\n        <div>\n            <mat-form-field>  \n                <mat-label>Password anterior</mat-label>  \n                <input matInput type=\"password\">  \n            </mat-form-field>  \n        </div>\n        <div>\n            <mat-form-field>  \n                <mat-label>Password Nova</mat-label>  \n                <input matInput type=\"password\">  \n            </mat-form-field>  \n        </div>\n        <div>\n            <mat-form-field>  \n                <mat-label>Repita a nova Password</mat-label>  \n                <input matInput type=\"password\">  \n            </mat-form-field >  \n        </div>\n    </div>\n    <div class=\"model-footer flex-item-center\">\n        <div class=\"small-gap\"></div>\n        <button mat-raised-button class=\"full-width full-height success-background\" \n          [mat-dialog-close]=\"true\" cdkFocusInitial>\n          <div>\n            Modificar\n          </div>\n        </button>\n    </div>\n</div>","import { Action } from '@ngrx/store';\r\nimport { Restaurant } from '../definitions/Restaurant';\r\n\r\nexport const SELECT_RESTAURANT = `[RESTAURANT] Select`;\r\n\r\nexport const STORAGE_KEYS = {\r\n  selectedRestaurant: `SELECTED_RESTAURANT`\r\n}\r\n\r\nexport class SelectRestaurant implements Action {\r\n    readonly type = SELECT_RESTAURANT;\r\n\r\n    constructor(public payload: Restaurant){}\r\n}\r\n \r\nexport type Actions = SelectRestaurant;","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './shared/login/login.component';\nimport { SignupComponent } from './shared/signup/signup.component';\nimport { MyAccountComponent } from './account/my-account/my-account.component';\nimport { FavouritesComponent } from './account/favourites/favourites.component';\nimport { OrdersComponent } from './account/orders/orders.component';\nimport { PaymentsComponent } from './account/payments/payments.component';\nimport { AddressesComponent } from './account/addresses/addresses.component';\nimport { SingleRestaurantComponent } from './single-restaurant/single-restaurant.component';\nimport { CheckoutComponent } from './checkout/checkout.component';\nimport { MealComponent } from './single-restaurant/meal/meal.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'home', component: HomeComponent\n  },\n  {\n    path: 'restaurants/:id', component: SingleRestaurantComponent,\n    children:[\n      {\n        path:':categoria', component: MealComponent\n      },\n    ]\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'signup', component: SignupComponent\n  },\n  {\n    path: 'checkout', component: CheckoutComponent\n  },\n  {\n    path: 'my-account', component: MyAccountComponent,\n    children: [\n      {\n        path: 'favourites', component: FavouritesComponent\n      },\n      {\n        path: 'orders', component: OrdersComponent\n      },\n      {\n        path: 'payments', component: PaymentsComponent\n      },\n      {\n        path: 'addresses', component: AddressesComponent\n      },\n      {\n        path: '', redirectTo: 'orders', pathMatch: 'full'\n      },\n      {\n        path: '**', redirectTo: 'orders', pathMatch: 'full'\n      }\n    ]\n  },\n  {\n    path: '', redirectTo: 'home', pathMatch: 'full'\n  },\n  {\n    path: '**', redirectTo: 'home', pathMatch: 'full'\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {anchorScrolling: 'enabled', useHash: false})],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}